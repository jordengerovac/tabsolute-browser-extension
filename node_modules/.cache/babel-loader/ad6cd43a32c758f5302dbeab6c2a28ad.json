{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { loadState, saveState } from './actions/stateActions';\nimport { v4 as uuid } from 'uuid';\nconst initialState = loadState();\n\nif (Object.keys(initialState) === 0) {\n  initialState = {\n    photoDetails: {\n      photo: {},\n      loading: true\n    },\n    widgets: [{\n      id: uuid(),\n      type: \"Greeting\",\n      value: \"\",\n      display: {\n        customizationVisible: \"false\",\n        font: \"50\",\n        location: \"center\"\n      }\n    }, {\n      id: uuid(),\n      type: \"Time\",\n      value: \"12\",\n      display: {\n        customizationVisible: \"false\",\n        font: \"50\",\n        location: \"center\"\n      }\n    }],\n    linkWidget: {\n      value: \"12\",\n      numLinks: 3,\n      display: {\n        customizationVisible: \"false\",\n        font: \"50\",\n        location: \"center\"\n      }\n    },\n    tiles: [{\n      id: uuid(),\n      name: \"Twitter\",\n      value: \"https://www.twitter.com\",\n      icon: \"fab fa-twitter\"\n    }, {\n      id: uuid(),\n      name: \"Facebook\",\n      value: \"https://www.facebook.com\",\n      icon: \"fab fa-facebook\"\n    }, {\n      id: uuid(),\n      name: \"YouTube\",\n      value: \"https://www.youtube.com\",\n      icon: \"fab fa-youtube\"\n    }]\n  };\n}\n\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/store.js"],"names":["createStore","applyMiddleware","thunk","rootReducer","loadState","saveState","v4","uuid","initialState","Object","keys","photoDetails","photo","loading","widgets","id","type","value","display","customizationVisible","font","location","linkWidget","numLinks","tiles","name","icon","middleware","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,wBAArC;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,MAAMC,YAAY,GAAGJ,SAAS,EAA9B;;AACA,IAAIK,MAAM,CAACC,IAAP,CAAYF,YAAZ,MAA8B,CAAlC,EAAqC;AACnCA,EAAAA,YAAY,GAAG;AACbG,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,OAAO,EAAE;AAFG,KADD;AAKbC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,EAAE,EAAER,IAAI,EADV;AAEES,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,KAAK,EAAE,EAHT;AAIEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,oBAAoB,EAAE,OADf;AAEPC,QAAAA,IAAI,EAAE,IAFC;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAJX,KADO,EAWP;AACEN,MAAAA,EAAE,EAAER,IAAI,EADV;AAEES,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,KAAK,EAAE,IAHT;AAIEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,oBAAoB,EAAE,OADf;AAEPC,QAAAA,IAAI,EAAE,IAFC;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAJX,KAXO,CALI;AA2BbC,IAAAA,UAAU,EAAE;AACVL,MAAAA,KAAK,EAAE,IADG;AAEVM,MAAAA,QAAQ,EAAE,CAFA;AAGVL,MAAAA,OAAO,EAAE;AACPC,QAAAA,oBAAoB,EAAE,OADf;AAEPC,QAAAA,IAAI,EAAE,IAFC;AAGPC,QAAAA,QAAQ,EAAE;AAHH;AAHC,KA3BC;AAoCbG,IAAAA,KAAK,EAAE,CACL;AACET,MAAAA,EAAE,EAAER,IAAI,EADV;AAEEkB,MAAAA,IAAI,EAAE,SAFR;AAGER,MAAAA,KAAK,EAAE,yBAHT;AAIES,MAAAA,IAAI,EAAE;AAJR,KADK,EAOL;AACEX,MAAAA,EAAE,EAAER,IAAI,EADV;AAEEkB,MAAAA,IAAI,EAAE,UAFR;AAGER,MAAAA,KAAK,EAAE,0BAHT;AAIES,MAAAA,IAAI,EAAE;AAJR,KAPK,EAaL;AACEX,MAAAA,EAAE,EAAER,IAAI,EADV;AAEEkB,MAAAA,IAAI,EAAE,SAFR;AAGER,MAAAA,KAAK,EAAE,yBAHT;AAIES,MAAAA,IAAI,EAAE;AAJR,KAbK;AApCM,GAAf;AAyDD;;AAGD,MAAMC,UAAU,GAAG,CAACzB,KAAD,CAAnB;AAEA,MAAM0B,KAAK,GAAG5B,WAAW,CAACG,WAAD,EAAcK,YAAd,EAA4BP,eAAe,CAAC,GAAG0B,UAAJ,CAA3C,CAAzB;AAEAC,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBxB,EAAAA,SAAS,CAACuB,KAAK,CAACE,QAAN,EAAD,CAAT;AACD,CAFD;AAIA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { loadState, saveState } from './actions/stateActions';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = loadState();\nif (Object.keys(initialState) === 0) {\n  initialState = {\n    photoDetails: {\n      photo: {},\n      loading: true\n    },\n    widgets: [\n      {\n        id: uuid(),\n        type: \"Greeting\",\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      },\n      {\n        id: uuid(),\n        type: \"Time\",\n        value: \"12\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        },\n      }\n    ],\n    linkWidget: {\n      value: \"12\",\n      numLinks: 3,\n      display: {\n        customizationVisible: \"false\",\n        font: \"50\",\n        location: \"center\"\n      },\n    },\n    tiles: [\n      {\n        id: uuid(),\n        name: \"Twitter\",\n        value: \"https://www.twitter.com\",\n        icon: \"fab fa-twitter\"\n      },\n      {\n        id: uuid(),\n        name: \"Facebook\",\n        value: \"https://www.facebook.com\",\n        icon: \"fab fa-facebook\"\n      },\n      {\n        id: uuid(),\n        name: \"YouTube\",\n        value: \"https://www.youtube.com\",\n        icon: \"fab fa-youtube\"\n      }\n    ]\n  };\n}\n\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}