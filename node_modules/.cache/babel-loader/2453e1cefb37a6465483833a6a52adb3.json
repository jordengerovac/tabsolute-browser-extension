{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor() {\n    super();\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.state = {\n      photoBackground: \"true\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPhoto();\n  }\n\n  render() {\n    const photoObject = this.props.photo;\n    var photoURL = photoObject.urls.regular;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        backgroundImage: 'url(' + \"photoURL\" + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: '#202124'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  photo: state.photo.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","DashboardView","Component","constructor","togglePhotoBackground","toggle","state","photoBackground","setState","localStorage","setItem","JSON","stringify","componentDidMount","props","render","photoObject","photo","photoURL","urls","regular","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","mapStateToProps","item"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAWdC,qBAXc,GAWU,MAAM;AAC1B,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI,KAAKC,KAAL,CAAWC,eAAX,KAA+B,MAAnC,EAA2C;AACzCF,QAAAA,MAAM,GAAG,OAAT;AACD,OAFD,MAGK;AACHA,QAAAA,MAAM,GAAG,MAAT;AACD;;AACD,WAAKG,QAAL,CAAc;AACZD,QAAAA,eAAe,EAAEF;AADL,OAAd,EAEG,MAAMI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB,CAA9B,CAFT;AAGD,KAtBW;;AAEV,SAAKA,KAAL,GAAc;AACVC,MAAAA,eAAe,EAAE;AADP,KAAd;AAGH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWd,UAAX;AACH;;AAeDe,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKF,KAAL,CAAWG,KAA/B;AACA,QAAIC,QAAQ,GAAGF,WAAW,CAACG,IAAZ,CAAiBC,OAAhC;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,SAAS,UAAT,GAAsB,GAAxC;AAA6CC,QAAAA,KAAK,EAAE,OAApD;AAA6DC,QAAAA,MAAM,EAAE,OAArE;AAA8EC,QAAAA,cAAc,EAAE,OAA9F;AAAuGC,QAAAA,MAAM,EAAE,GAA/G;AAAoHC,QAAAA,OAAO,EAAE,GAA7H;AAAkIC,QAAAA,gBAAgB,EAAE,WAApJ;AAAiKC,QAAAA,eAAe,EAAE;AAAlL;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AAnCuC;;AAsC5C,MAAMC,eAAe,GAAGvB,KAAK,KAAK;AAC9BW,EAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,CAAYa;AADW,CAAL,CAA7B;;AAIA,eAAe/B,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,aAAzC,CAAf","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\n\nclass DashboardView extends React.Component {\n    constructor() {\n        super();\n        this.state = ({\n            photoBackground: \"true\"\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchPhoto();\n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n\n    render() {\n        const photoObject = this.props.photo;\n        var photoURL = photoObject.urls.regular;\n        \n        \n        \n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + \"photoURL\" + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    photo: state.photo.item\n})\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);"]},"metadata":{},"sourceType":"module"}