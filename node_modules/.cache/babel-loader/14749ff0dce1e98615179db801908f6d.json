{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Time.js\";\nimport '../App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Time extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tick = () => {\n      var current_time = new Date();\n      this.setState({\n        time: current_time\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    const current_time = new Date();\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n    if (this.props.widget.value === \"12\") return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '0',\n        color: 'white',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [current_time.toLocaleTimeString().split(\":\")[0], \":\", current_time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this);else return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '0',\n        color: 'white',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [current_time.toTimeString().split(\":\")[0], \":\", current_time.toTimeString().split(\":\")[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default Time;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Time.js"],"names":["React","Time","Component","tick","current_time","Date","setState","time","componentDidMount","setInterval","render","ampm","getHours","props","widget","value","margin","color","fontSize","display","font","toLocaleTimeString","split","toTimeString"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAC/BC,IAD+B,GACxB,MAAM;AACT,UAAIC,YAAY,GAAG,IAAIC,IAAJ,EAAnB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEH;AADI,OAAd;AAGH,KAN8B;AAAA;;AAQ/BI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKN,IAAL;AACD,KAFQ,EAEN,IAFM,CAAX;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAMN,YAAY,GAAG,IAAIC,IAAJ,EAArB;AACA,QAAIM,IAAI,GAAGP,YAAY,CAACQ,QAAb,MAA2B,EAA3B,GAAgC,IAAhC,GAAuC,IAAlD;AACA,QAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,KAA4B,IAAhC,EACI,oBAAQ;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE,OAArB;AAA8BC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,OAAlB,CAA0BC,IAA1B,GAAiC;AAAzE,OAAX;AAAA,iBAA4FhB,YAAY,CAACiB,kBAAb,GAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAA5F,OAA8IlB,YAAY,CAACiB,kBAAb,GAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAA9I,OAAgMX,IAAhM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,CADJ,KAGI,oBAAQ;AAAI,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE,OAArB;AAA8BC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,OAAlB,CAA0BC,IAA1B,GAAiC;AAAzE,OAAX;AAAA,iBAA4FhB,YAAY,CAACmB,YAAb,GAA4BD,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAA5F,OAAwIlB,YAAY,CAACmB,YAAb,GAA4BD,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAxI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACP;;AArB8B;;AAwBnC,eAAerB,IAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\n\nclass Time extends React.Component {\n    tick = () => {\n        var current_time = new Date();\n        this.setState({\n            time: current_time\n        });\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            this.tick();\n          }, 1000);\n    }\n\n    render() {\n        const current_time = new Date();\n        var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n        if (this.props.widget.value === \"12\")\n            return (<h1 style={{margin: '0', color: 'white', fontSize: this.props.widget.display.font + 'px'}}>{current_time.toLocaleTimeString().split(\":\")[0]}:{current_time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>)\n        else\n            return (<h1 style={{margin: '0', color: 'white', fontSize: this.props.widget.display.font + 'px'}}>{current_time.toTimeString().split(\":\")[0]}:{current_time.toTimeString().split(\":\")[1]}</h1>)\n    }\n}\n\nexport default Time;"]},"metadata":{},"sourceType":"module"}