{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardView from './components/DashboardView';\nimport LinkTileView from './components/LinkTileView';\nimport { fetchPhoto } from './actions/photoActions';\nimport Audio from './components/Audio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchPhoto();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.widgetDetails.widgets.map(widget => {\n        if (widget.type === \"Audio\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Audio, {\n              widget: widget\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 22\n          }, this);\n        }\n      }), this.props.viewDetails.view === \"dashboard\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DashboardView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), this.props.widgetDetails.widgets.map(widget => {\n          if (widget.type === \"Audio\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Audio, {\n                widget: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(LinkTileView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), this.props.widgetDetails.widgets.map(widget => {\n          if (widget.type === \"Audio\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Audio, {\n                widget: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    viewDetails: state.viewDetails,\n    photoDetails: state.photoDetails,\n    widgetDetails: state.widgetDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(App);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/App.js"],"names":["React","connect","DashboardView","LinkTileView","fetchPhoto","Audio","App","Component","componentDidMount","props","render","widgetDetails","widgets","map","widget","type","viewDetails","view","mapStateToProps","state","ownProps","photoDetails"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,UAAX;AACD;;AAEDM,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAA,iBACG,KAAKD,KAAL,CAAWE,aAAX,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAChD,YAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,8BAAO;AAAA,mCAAK,QAAC,KAAD;AAAO,cAAA,MAAM,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAJA,CADH,EAMG,KAAKL,KAAL,CAAWO,WAAX,CAAuBC,IAAvB,KAAgC,WAAhC,gBACD;AAAA,gCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKR,KAAL,CAAWE,aAAX,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAChD,cAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,gCAAO;AAAA,qCAAK,QAAC,KAAD;AAAO,gBAAA,MAAM,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,SAJA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAUD;AAAA,gCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKL,KAAL,CAAWE,aAAX,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAChD,cAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,gCAAO;AAAA,qCAAK,QAAC,KAAD;AAAO,gBAAA,MAAM,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF,SAJA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAlC6B;;AAqChC,SAASI,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,SAAO;AACLJ,IAAAA,WAAW,EAAEG,KAAK,CAACH,WADd;AAELK,IAAAA,YAAY,EAAEF,KAAK,CAACE,YAFf;AAGLV,IAAAA,aAAa,EAAEQ,KAAK,CAACR;AAHhB,GAAP;AAKD;;AAEH,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,GAAzC,CAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardView from './components/DashboardView';\nimport LinkTileView from './components/LinkTileView';\nimport { fetchPhoto } from './actions/photoActions';\nimport Audio from './components/Audio';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchPhoto();\n  }\n\n  render(){\n      return (\n        <div>\n          {this.props.widgetDetails.widgets.map((widget) => {\n            if (widget.type === \"Audio\") {\n              return(<div><Audio widget={widget} /></div>)\n            }\n          })}\n          {this.props.viewDetails.view === \"dashboard\" ? \n          <div>\n            <DashboardView />\n            {this.props.widgetDetails.widgets.map((widget) => {\n              if (widget.type === \"Audio\") {\n                return(<div><Audio widget={widget} /></div>)\n              }\n            })}\n          </div> \n          : \n          <div>\n            <LinkTileView />\n            {this.props.widgetDetails.widgets.map((widget) => {\n              if (widget.type === \"Audio\") {\n                return(<div><Audio widget={widget} /></div>)\n              }\n            })}\n          </div> \n          }\n        </div>\n        )\n    }\n  }\n\n  function mapStateToProps(state, ownProps) {\n    return {\n      viewDetails: state.viewDetails,\n      photoDetails: state.photoDetails,\n      widgetDetails: state.widgetDetails\n    }\n  }\n\nexport default connect(mapStateToProps, { fetchPhoto })(App);\n"]},"metadata":{},"sourceType":"module"}