{"ast":null,"code":"import { FETCH_PHOTO } from './types';\nexport const fetchPhoto = () => dispatch => {\n  fetch(\"https://api.unsplash.com/collections/4578671/photos/?orientation=landscape&per_page=100&client_id=\" + \"B5vLJ0aNYeNZOYtpiNcNNfN0CdpoQgpgtmWnvj3YgJc\") //fetch(\"https://jsonplaceholder.typicode.com/todos\")\n  .then(res => res.json()).then(result => {\n    console.log(result);\n    var random_num = Math.floor(Math.random() * result.length);\n    var photo = result[random_num];\n    dispatch({\n      type: FETCH_PHOTO,\n      payload: photo\n    });\n  }, error => {\n    console.log(\"error\");\n  });\n};","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/actions/photoActions.js"],"names":["FETCH_PHOTO","fetchPhoto","dispatch","fetch","then","res","json","result","console","log","random_num","Math","floor","random","length","photo","type","payload","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,KAAK,CAAC,uGAAuG,6CAAxG,CAAL,CACA;AADA,GAECC,IAFD,CAEMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFb,EAGCF,IAHD,CAIGG,MAAD,IAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAIG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,MAAM,CAACO,MAAlC,CAAjB;AACA,QAAIC,KAAK,GAAGR,MAAM,CAACG,UAAD,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACTc,MAAAA,IAAI,EAAEhB,WADG;AAETiB,MAAAA,OAAO,EAAEF;AAFA,KAAD,CAAR;AAIH,GAZD,EAaCG,KAAD,IAAW;AACTV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAfC;AAgBD,CAjBM","sourcesContent":["import { FETCH_PHOTO } from './types';\n\nexport const fetchPhoto = () => dispatch => {\n  fetch(\"https://api.unsplash.com/collections/4578671/photos/?orientation=landscape&per_page=100&client_id=\" + \"B5vLJ0aNYeNZOYtpiNcNNfN0CdpoQgpgtmWnvj3YgJc\")\n  //fetch(\"https://jsonplaceholder.typicode.com/todos\")\n  .then(res => res.json())\n  .then(\n    (result) => {\n      console.log(result)\n      var random_num = Math.floor(Math.random() * result.length);\n      var photo = result[random_num]\n      dispatch({\n      type: FETCH_PHOTO,\n      payload: photo\n    });\n  },\n  (error) => {\n    console.log(\"error\")\n})\n}"]},"metadata":{},"sourceType":"module"}