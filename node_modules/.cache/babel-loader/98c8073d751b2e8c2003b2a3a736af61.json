{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolutely-react-extension/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.tick = () => {\n      this.setState({\n        time: new Date()\n      });\n\n      if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n        localStorage.setItem(\"refresh\", \"true\");\n      }\n    };\n\n    this.counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({\n        count: this.state.count + 1\n      });\n      localStorage.setItem(\"count\", this.state.count + 1);\n    };\n\n    this.state = {\n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\"\n    };\n  }\n\n  componentDidMount() {\n    const API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto\n    });\n\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + API_KEY).then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          photo: result[random_num].urls.regular\n        });\n        localStorage.setItem(\"photo\", result[random_num].urls.regular);\n        localStorage.setItem(\"refresh\", \"false\");\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(\"error\");\n      });\n    }\n\n    const interval = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (this.state.time.getHours() > 8) {\n      greeting = \"evening\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: 'url(' + this.state.photo + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [\"Good \", greeting, \", Jorden\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [this.state.time.toLocaleTimeString().split(\":\")[0], \":\", this.state.time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolutely-react-extension/src/App.js"],"names":["React","useState","useEffect","App","Component","constructor","tick","setState","time","Date","state","getMinutes","getSeconds","localStorage","setItem","counter","count","photo","refresh","componentDidMount","API_KEY","process","env","REACT_APP_UNSPLASH_API_KEY","parsedCount","Number","getItem","getPhoto","String","getRefresh","fetch","then","res","json","result","random_num","Math","floor","random","length","urls","regular","error","console","log","interval","setInterval","render","greeting","ampm","getHours","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","textAlign","color","toLocaleTimeString","split"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\"\n    };\n  }\n\n  tick = () => {\n    this.setState({\n      time: new Date()\n    });\n    if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n      localStorage.setItem(\"refresh\", \"true\");\n    }\n  }\n\n  counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({count: this.state.count + 1});\n      localStorage.setItem(\"count\", this.state.count + 1);\n  }\n\n  componentDidMount() {\n    const API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto\n    })\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular\n            });\n            localStorage.setItem(\"photo\", result[random_num].urls.regular);\n            localStorage.setItem(\"refresh\", \"false\");\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n    }\n      const interval = setInterval(() => {\n        this.tick();\n      }, 1000);\n  }\n\n  render(){\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n    if (this.state.time.getHours() > 8) {\n      greeting = \"evening\";\n    }\n    else {\n      greeting = \"morning\"\n    }\n\n    return (\n      <div style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat'}}>\n          <div className=\"centered\" style={{textAlign: 'center'}}>\n            <h3 style={{margin: '0', color: 'white'}}>Good {greeting}, Jorden</h3>\n            <h1 style={{margin: '0', color: 'white'}}>{this.state.time.toLocaleTimeString().split(\":\")[0]}:{this.state.time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}