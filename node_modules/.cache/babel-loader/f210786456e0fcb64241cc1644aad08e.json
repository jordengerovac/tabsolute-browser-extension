{"ast":null,"code":"import { ADD_WIDGET, DELETE_WIDGET } from '../actions/types';\nimport { v4 as uuid } from 'uuid';\nconst initialState = {\n  widgets: [{\n    id: uuid(),\n    type: \"Greeting\",\n    value: \"\",\n    display: {\n      customizationVisible: \"false\",\n      font: \"50\",\n      location: \"center\"\n    }\n  }, {\n    id: uuid(),\n    type: \"Time\",\n    value: \"12\",\n    display: {\n      customizationVisible: \"false\",\n      font: \"50\",\n      location: \"center\"\n    }\n  }]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_WIDGET:\n      console.log(action.payload);\n      const newWidget = {\n        id: uuid(),\n        type: \"Greeting\",\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      };\n      return { ...state,\n        widgets: [...state.widgets, newWidget]\n      };\n\n    case DELETE_WIDGET:\n      const newWidgetsState = state.widgets.filter(widget => action.payload.target.id !== widget.id);\n      return { ...state,\n        widgets: newWidgetsState\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/reducers/widgetReducer.js"],"names":["ADD_WIDGET","DELETE_WIDGET","v4","uuid","initialState","widgets","id","type","value","display","customizationVisible","font","location","state","action","console","log","payload","newWidget","newWidgetsState","filter","widget","target"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACL;AACEC,IAAAA,EAAE,EAAEH,IAAI,EADV;AAEEI,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,EAAE,OADf;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,QAAQ,EAAE;AAHH;AAJX,GADK,EAWL;AACEN,IAAAA,EAAE,EAAEH,IAAI,EADV;AAEEI,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,EAAE,OADf;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,QAAQ,EAAE;AAHH;AAJX,GAXK;AADQ,CAArB;AAyBA,eAAe,UAASC,KAAK,GAAGT,YAAjB,EAA+BU,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACP,IAAd;AACI,SAAKP,UAAL;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACA,YAAMC,SAAS,GAAG;AAChBZ,QAAAA,EAAE,EAAEH,IAAI,EADQ;AAEhBI,QAAAA,IAAI,EAAE,UAFU;AAGhBC,QAAAA,KAAK,EAAE,EAHS;AAIhBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,oBAAoB,EAAE,OADf;AAEPC,UAAAA,IAAI,EAAE,IAFC;AAGPC,UAAAA,QAAQ,EAAE;AAHH;AAJO,OAAlB;AAUA,aAAO,EACL,GAAGC,KADE;AAELR,QAAAA,OAAO,EAAE,CAAC,GAAGQ,KAAK,CAACR,OAAV,EAAmBa,SAAnB;AAFJ,OAAP;;AAIF,SAAKjB,aAAL;AACE,YAAMkB,eAAe,GAAGN,KAAK,CAACR,OAAN,CAAce,MAAd,CAAqBC,MAAM,IAAIP,MAAM,CAACG,OAAP,CAAeK,MAAf,CAAsBhB,EAAtB,KAA6Be,MAAM,CAACf,EAAnE,CAAxB;AACA,aAAO,EACL,GAAGO,KADE;AAELR,QAAAA,OAAO,EAAEc;AAFJ,OAAP;;AAIF;AACE,aAAON,KAAP;AAxBN;AA0BH","sourcesContent":["import { ADD_WIDGET, DELETE_WIDGET } from '../actions/types';\nimport { v4 as uuid } from 'uuid';\n\n\nconst initialState = {\n    widgets: [\n        {\n          id: uuid(),\n          type: \"Greeting\",\n          value: \"\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          }\n        },\n        {\n          id: uuid(),\n          type: \"Time\",\n          value: \"12\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          },\n        }\n    ]\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ADD_WIDGET:\n          console.log(action.payload)\n          const newWidget = {\n            id: uuid(),\n            type: \"Greeting\",\n            value: \"\",\n            display: {\n              customizationVisible: \"false\",\n              font: \"50\",\n              location: \"center\"\n            }\n          }\n          return {\n            ...state,\n            widgets: [...state.widgets, newWidget]\n          }\n        case DELETE_WIDGET:\n          const newWidgetsState = state.widgets.filter(widget => action.payload.target.id !== widget.id);\n          return {\n            ...state,\n            widgets: newWidgetsState\n          }\n        default:\n          return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}