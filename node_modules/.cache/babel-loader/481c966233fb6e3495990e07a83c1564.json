{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js\";\nimport '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quote extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getRandomQuote = () => {\n      fetch('https://type.fit/api/quotes').then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === wid) {\n              widget.value = result[random_num].text + \":@:\" + result[random_num].author;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '80px'\n        },\n        children: \"Here is a Quote...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateWidget\n})(Quote);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js"],"names":["React","updateWidget","connect","Quote","Component","getRandomQuote","fetch","then","res","json","result","random_num","Math","floor","random","length","setState","widgets","state","map","widget","id","wid","value","text","author","localStorage","setItem","JSON","stringify","render","fontSize","mapStateToProps"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAChCC,cADgC,GACf,MAAM;AACnBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGGG,MAAD,IAAY;AACV,YAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAjB;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB,CAAwBC,MAAD,IAAY;AAC1C,gBAAIA,MAAM,CAACC,EAAP,KAAcC,GAAlB,EAAuB;AACrBF,cAAAA,MAAM,CAACG,KAAP,GAAeb,MAAM,CAACC,UAAD,CAAN,CAAmBa,IAAnB,GAA0B,KAA1B,GAAkCd,MAAM,CAACC,UAAD,CAAN,CAAmBc,MAApE;AACD;;AACD,mBAAOL,MAAP;AACD,WALQ;AADG,SAAd,EAOG,MAAMM,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKX,KAApB,CAA9B,CAPT;AAQD,OAbH;AAeD,KAjB6B;AAAA;;AAmBhCY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzB+B;;AA4BpC,eAAe7B,OAAO,CAAC8B,eAAD,EAAkB;AAAE/B,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,KAA3C,CAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\n\nclass Quote extends React.Component {\n    getRandomQuote = () => {\n        fetch('https://type.fit/api/quotes')\n          .then(res => res.json())\n          .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              widgets: this.state.widgets.map((widget) => {\n                if (widget.id === wid) {\n                  widget.value = result[random_num].text + \":@:\" + result[random_num].author\n                }\n                return widget;\n              })\n            }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n          }\n        )\n      }\n\n    render() {\n        return (\n            <div>\n                <p style={{fontSize: '80px'}}>Here is a Quote...</p>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, { updateWidget })(Quote);"]},"metadata":{},"sourceType":"module"}