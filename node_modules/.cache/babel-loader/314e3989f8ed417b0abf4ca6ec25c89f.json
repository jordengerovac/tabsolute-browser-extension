{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/BrowserExtensionProjects/redux-tabsolute/src/components/DisplaySection.js\";\nimport '../App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ViewType from './ViewType';\nimport { CHANGE_BACKGROUND_COLOUR, CHANGE_FONT_COLOUR, CHANGE_TILE_COLOUR, CHANGE_FONT_FAMILY } from '../actions/types';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DisplaySection extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateDisplay = event => {\n      if (event.target.name === \"fontFamily\") {\n        payload = {\n          type: CHANGE_FONT_FAMILY,\n          payload: event.target.value\n        };\n        store.dispatch(payload);\n      } else {\n        if (event.key === \"Enter\") {\n          var payload = {};\n\n          if (event.target.name === \"background\") {\n            payload = {\n              type: CHANGE_BACKGROUND_COLOUR,\n              payload: event.target.value\n            };\n          } else if (event.target.name === \"font\") {\n            payload = {\n              type: CHANGE_FONT_COLOUR,\n              payload: event.target.value\n            };\n          } else if (event.target.name === \"tile\") {\n            payload = {\n              type: CHANGE_TILE_COLOUR,\n              payload: event.target.value\n            };\n          }\n\n          store.dispatch(payload);\n        }\n      }\n    };\n  }\n\n  render() {\n    const fonts = {\n      name: 'Arial',\n      name: 'Brush Script MT',\n      name: 'Courier New',\n      name: 'Garamond',\n      name: 'Georgia',\n      name: 'Helvetica',\n      name: 'IBM Plex Sans',\n      name: 'Roboto',\n      name: 'Tahoma',\n      name: 'Times',\n      name: 'Trebuchet MS',\n      name: 'Verdana'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'left',\n          color: 'white',\n          margin: '15px',\n          margin: '30px 0px 10px 15px'\n        },\n        children: \"DISPLAY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#30363D',\n          padding: '10px',\n          margin: '0px 10px 10px 10px',\n          borderRadius: '7px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left',\n            margin: '0px 10px 10px 0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ViewType, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'white',\n                  fontSize: '15px',\n                  margin: '0px 0px 5px 20px'\n                },\n                children: \"Background Colour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: this.props.viewDetails.backgroundColour,\n                name: \"background\",\n                placeholder: \"Colour / Hex colour code (ex. #2D3339)\",\n                style: {\n                  width: '220px',\n                  fontSize: '12px'\n                },\n                onKeyPress: this.updateDisplay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'white',\n                  fontSize: '15px',\n                  margin: '0px 0px 5px 20px'\n                },\n                children: \"Font Colour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: this.props.viewDetails.fontColour,\n                name: \"font\",\n                placeholder: \"Colour / Hex colour code (ex. white)\",\n                style: {\n                  width: '220px',\n                  fontSize: '12px'\n                },\n                onKeyPress: this.updateDisplay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'white',\n                  fontSize: '15px',\n                  margin: '0px 0px 5px 20px'\n                },\n                children: \"Link Tile Colour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: this.props.viewDetails.tileColour,\n                name: \"tile\",\n                placeholder: \"Colour / Hex colour code (ex. #1F2023)\",\n                style: {\n                  width: '220px',\n                  fontSize: '12px'\n                },\n                onKeyPress: this.updateDisplay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'white',\n                  fontSize: '15px',\n                  margin: '0px 0px 5px 20px'\n                },\n                children: \"Font Family\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"fontFamily\",\n                id: \"fontFamily\",\n                style: {\n                  border: 'none',\n                  height: '25px',\n                  width: '228px',\n                  margin: '3px 0px 0px 20px'\n                },\n                onChange: this.updateDisplay,\n                children: [fonts.map(font => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: font.name,\n                    selected: font.name === this.props.viewDetails.fontFamily,\n                    children: font.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: this.props.viewDetails.fontFamily === 'IBM Plex Sans',\n                  value: \"IBM Plex Sans\",\n                  children: \"IBM Plex Sans\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: this.props.viewDetails.fontFamily === 'Times',\n                  value: \"Times\",\n                  children: \"Times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: this.props.viewDetails.fontFamily === 'Arial',\n                  value: \"Arial\",\n                  children: \"Arial\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: this.props.viewDetails.fontFamily === 'Verdana',\n                  value: \"Verdana\",\n                  children: \"Verdana\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: this.props.viewDetails.fontFamily === 'Roboto',\n                  value: \"Roboto\",\n                  children: \"Roboto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    viewDetails: state.viewDetails\n  };\n}\n\nexport default connect(mapStateToProps)(DisplaySection);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/BrowserExtensionProjects/redux-tabsolute/src/components/DisplaySection.js"],"names":["React","connect","ViewType","CHANGE_BACKGROUND_COLOUR","CHANGE_FONT_COLOUR","CHANGE_TILE_COLOUR","CHANGE_FONT_FAMILY","store","DisplaySection","Component","updateDisplay","event","target","name","payload","type","value","dispatch","key","render","fonts","textAlign","color","margin","backgroundColor","padding","borderRadius","marginBottom","fontSize","props","viewDetails","backgroundColour","width","fontColour","tileColour","border","height","map","font","fontFamily","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,wBAAT,EAAmCC,kBAAnC,EAAuDC,kBAAvD,EAA2EC,kBAA3E,QAAqG,kBAArG;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SACzCC,aADyC,GACxBC,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,YAA1B,EAAwC;AACpCC,QAAAA,OAAO,GAAG;AACNC,UAAAA,IAAI,EAAET,kBADA;AAENQ,UAAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaI;AAFhB,SAAV;AAIAT,QAAAA,KAAK,CAACU,QAAN,CAAeH,OAAf;AACH,OAND,MAOK;AACD,YAAIH,KAAK,CAACO,GAAN,KAAc,OAAlB,EAA4B;AACxB,cAAIJ,OAAO,GAAG,EAAd;;AACA,cAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,YAA1B,EAAwC;AACpCC,YAAAA,OAAO,GAAG;AACNC,cAAAA,IAAI,EAAEZ,wBADA;AAENW,cAAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaI;AAFhB,aAAV;AAIH,WALD,MAMK,IAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,MAA1B,EAAkC;AACnCC,YAAAA,OAAO,GAAG;AACNC,cAAAA,IAAI,EAAEX,kBADA;AAENU,cAAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaI;AAFhB,aAAV;AAIH,WALI,MAMA,IAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,MAA1B,EAAkC;AACnCC,YAAAA,OAAO,GAAG;AACNC,cAAAA,IAAI,EAAEV,kBADA;AAENS,cAAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaI;AAFhB,aAAV;AAIH;;AACDT,UAAAA,KAAK,CAACU,QAAN,CAAeH,OAAf;AACH;AACJ;AACJ,KAjCwC;AAAA;;AAmCzCK,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG;AACVP,MAAAA,IAAI,EAAE,OADI;AAEVA,MAAAA,IAAI,EAAE,iBAFI;AAGVA,MAAAA,IAAI,EAAE,aAHI;AAIVA,MAAAA,IAAI,EAAE,UAJI;AAKVA,MAAAA,IAAI,EAAE,SALI;AAMVA,MAAAA,IAAI,EAAE,WANI;AAOVA,MAAAA,IAAI,EAAE,eAPI;AAQVA,MAAAA,IAAI,EAAE,QARI;AASVA,MAAAA,IAAI,EAAE,QATI;AAUVA,MAAAA,IAAI,EAAE,OAVI;AAWVA,MAAAA,IAAI,EAAE,cAXI;AAYVA,MAAAA,IAAI,EAAE;AAZI,KAAd;AAeA,wBACI;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAACQ,UAAAA,SAAS,EAAE,MAAZ;AAAoBC,UAAAA,KAAK,EAAE,OAA3B;AAAoCC,UAAAA,MAAM,EAAE,MAA5C;AAAoDA,UAAAA,MAAM,EAAE;AAA5D,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE,SAAlB;AAA6BC,UAAAA,OAAO,EAAE,MAAtC;AAA8CF,UAAAA,MAAM,EAAE,oBAAtD;AAA4EG,UAAAA,YAAY,EAAE;AAA1F,SAAZ;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAACL,YAAAA,SAAS,EAAE,MAAZ;AAAoBE,YAAAA,MAAM,EAAE;AAA5B,WAAZ;AAAA,kCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI;AAAK,cAAA,KAAK,EAAE;AAACI,gBAAAA,YAAY,EAAE;AAAf,eAAZ;AAAA,sCACI;AAAG,gBAAA,KAAK,EAAE;AAACL,kBAAAA,KAAK,EAAE,OAAR;AAAiBM,kBAAAA,QAAQ,EAAE,MAA3B;AAAmCL,kBAAAA,MAAM,EAAE;AAA3C,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,WAAX,CAAuBC,gBAAxD;AAA0E,gBAAA,IAAI,EAAC,YAA/E;AAA4F,gBAAA,WAAW,EAAC,wCAAxG;AAAiJ,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAE,OAAR;AAAiBJ,kBAAAA,QAAQ,EAAE;AAA3B,iBAAxJ;AAA4L,gBAAA,UAAU,EAAE,KAAKlB;AAA7M;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,KAAK,EAAE;AAACiB,gBAAAA,YAAY,EAAE;AAAf,eAAZ;AAAA,sCACI;AAAG,gBAAA,KAAK,EAAE;AAACL,kBAAAA,KAAK,EAAE,OAAR;AAAiBM,kBAAAA,QAAQ,EAAE,MAA3B;AAAmCL,kBAAAA,MAAM,EAAE;AAA3C,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,WAAX,CAAuBG,UAAxD;AAAoE,gBAAA,IAAI,EAAC,MAAzE;AAAgF,gBAAA,WAAW,EAAC,sCAA5F;AAAmI,gBAAA,KAAK,EAAE;AAACD,kBAAAA,KAAK,EAAE,OAAR;AAAiBJ,kBAAAA,QAAQ,EAAE;AAA3B,iBAA1I;AAA8K,gBAAA,UAAU,EAAE,KAAKlB;AAA/L;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAK,cAAA,KAAK,EAAE;AAACiB,gBAAAA,YAAY,EAAE;AAAf,eAAZ;AAAA,sCACI;AAAG,gBAAA,KAAK,EAAE;AAACL,kBAAAA,KAAK,EAAE,OAAR;AAAiBM,kBAAAA,QAAQ,EAAE,MAA3B;AAAmCL,kBAAAA,MAAM,EAAE;AAA3C,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,YAAY,EAAE,KAAKM,KAAL,CAAWC,WAAX,CAAuBI,UAAxD;AAAoE,gBAAA,IAAI,EAAC,MAAzE;AAAgF,gBAAA,WAAW,EAAC,wCAA5F;AAAqI,gBAAA,KAAK,EAAE;AAACF,kBAAAA,KAAK,EAAE,OAAR;AAAiBJ,kBAAAA,QAAQ,EAAE;AAA3B,iBAA5I;AAAgL,gBAAA,UAAU,EAAE,KAAKlB;AAAjM;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI;AAAA,sCACI;AAAG,gBAAA,KAAK,EAAE;AAACY,kBAAAA,KAAK,EAAE,OAAR;AAAiBM,kBAAAA,QAAQ,EAAE,MAA3B;AAAmCL,kBAAAA,MAAM,EAAE;AAA3C,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,IAAI,EAAC,YAAb;AAA0B,gBAAA,EAAE,EAAC,YAA7B;AAA0C,gBAAA,KAAK,EAAE;AAACY,kBAAAA,MAAM,EAAE,MAAT;AAAiBC,kBAAAA,MAAM,EAAE,MAAzB;AAAiCJ,kBAAAA,KAAK,EAAE,OAAxC;AAAiDT,kBAAAA,MAAM,EAAE;AAAzD,iBAAjD;AAA+H,gBAAA,QAAQ,EAAE,KAAKb,aAA9I;AAAA,2BACKU,KAAK,CAACiB,GAAN,CAAWC,IAAD,IAAU;AACjB,sCACI;AAAQ,oBAAA,KAAK,EAAEA,IAAI,CAACzB,IAApB;AAA0B,oBAAA,QAAQ,EAAEyB,IAAI,CAACzB,IAAL,KAAc,KAAKgB,KAAL,CAAWC,WAAX,CAAuBS,UAAzE;AAAA,8BAAsFD,IAAI,CAACzB;AAA3F;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGH,iBAJA,CADL,eAMI;AAAQ,kBAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWC,WAAX,CAAuBS,UAAvB,KAAsC,eAAxD;AAAyE,kBAAA,KAAK,EAAC,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAQ,kBAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,WAAX,CAAuBS,UAAvB,KAAsC,OAAxD;AAAiE,kBAAA,KAAK,EAAC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI;AAAQ,kBAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,WAAX,CAAuBS,UAAvB,KAAsC,OAAxD;AAAiE,kBAAA,KAAK,EAAC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,eASI;AAAQ,kBAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,WAAX,CAAuBS,UAAvB,KAAsC,SAAxD;AAAmE,kBAAA,KAAK,EAAC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,eAUI;AAAQ,kBAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,WAAX,CAAuBS,UAAvB,KAAsC,QAAxD;AAAkE,kBAAA,KAAK,EAAC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AA3FwC;;AA8F7C,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,SAAO;AACLZ,IAAAA,WAAW,EAAEW,KAAK,CAACX;AADd,GAAP;AAGH;;AAED,eAAe7B,OAAO,CAACuC,eAAD,CAAP,CAAyBhC,cAAzB,CAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ViewType from './ViewType';\nimport { CHANGE_BACKGROUND_COLOUR, CHANGE_FONT_COLOUR, CHANGE_TILE_COLOUR, CHANGE_FONT_FAMILY } from '../actions/types';\nimport store from '../store';\n\nclass DisplaySection extends React.Component {\n    updateDisplay = (event) => {\n        if (event.target.name === \"fontFamily\") {\n            payload = {\n                type: CHANGE_FONT_FAMILY,\n                payload: event.target.value\n            }\n            store.dispatch(payload);\n        }\n        else {\n            if (event.key === \"Enter\" ) {\n                var payload = {};\n                if (event.target.name === \"background\") {\n                    payload = {\n                        type: CHANGE_BACKGROUND_COLOUR,\n                        payload: event.target.value\n                    }\n                }\n                else if (event.target.name === \"font\") {\n                    payload = {\n                        type: CHANGE_FONT_COLOUR,\n                        payload: event.target.value\n                    }\n                }\n                else if (event.target.name === \"tile\") {\n                    payload = {\n                        type: CHANGE_TILE_COLOUR,\n                        payload: event.target.value\n                    }\n                }\n                store.dispatch(payload);\n            }\n        }\n    }\n\n    render() {\n        const fonts = {\n            name: 'Arial',\n            name: 'Brush Script MT',\n            name: 'Courier New',\n            name: 'Garamond',\n            name: 'Georgia',\n            name: 'Helvetica',\n            name: 'IBM Plex Sans',\n            name: 'Roboto',\n            name: 'Tahoma',\n            name: 'Times',\n            name: 'Trebuchet MS',\n            name: 'Verdana',\n        }\n\n        return(\n            <div>\n                <h4 style={{textAlign: 'left', color: 'white', margin: '15px', margin: '30px 0px 10px 15px'}}>DISPLAY</h4>\n                <div style={{backgroundColor: '#30363D', padding: '10px', margin: '0px 10px 10px 10px', borderRadius: '7px'}}>\n                    <div style={{textAlign: 'left', margin: '0px 10px 10px 0px'}}>\n                        <ViewType />\n                        <div>\n                            <div style={{marginBottom: '10px'}}>\n                                <p style={{color: 'white', fontSize: '15px', margin: '0px 0px 5px 20px'}}>Background Colour</p>\n                                <input type=\"text\" defaultValue={this.props.viewDetails.backgroundColour} name=\"background\" placeholder=\"Colour / Hex colour code (ex. #2D3339)\" style={{width: '220px', fontSize: '12px'}} onKeyPress={this.updateDisplay}></input>\n                            </div>\n                            <div style={{marginBottom: '10px'}}>\n                                <p style={{color: 'white', fontSize: '15px', margin: '0px 0px 5px 20px'}}>Font Colour</p>\n                                <input type=\"text\" defaultValue={this.props.viewDetails.fontColour} name=\"font\" placeholder=\"Colour / Hex colour code (ex. white)\" style={{width: '220px', fontSize: '12px'}} onKeyPress={this.updateDisplay}></input>\n                            </div>\n                            <div style={{marginBottom: '10px'}}>\n                                <p style={{color: 'white', fontSize: '15px', margin: '0px 0px 5px 20px'}}>Link Tile Colour</p>\n                                <input type=\"text\" defaultValue={this.props.viewDetails.tileColour} name=\"tile\" placeholder=\"Colour / Hex colour code (ex. #1F2023)\" style={{width: '220px', fontSize: '12px'}} onKeyPress={this.updateDisplay}></input>\n                            </div>\n                            <div>\n                                <p style={{color: 'white', fontSize: '15px', margin: '0px 0px 5px 20px'}}>Font Family</p>\n                                <select name=\"fontFamily\" id=\"fontFamily\" style={{border: 'none', height: '25px', width: '228px', margin: '3px 0px 0px 20px'}} onChange={this.updateDisplay}>\n                                    {fonts.map((font) => {\n                                        return(\n                                            <option value={font.name} selected={font.name === this.props.viewDetails.fontFamily}>{font.name}</option>\n                                        )\n                                    })}\n                                    <option selected={this.props.viewDetails.fontFamily === 'IBM Plex Sans'} value=\"IBM Plex Sans\">IBM Plex Sans</option>\n                                    <option selected={this.props.viewDetails.fontFamily === 'Times'} value=\"Times\">Times</option>\n                                    <option selected={this.props.viewDetails.fontFamily === 'Arial'} value=\"Arial\">Arial</option>\n                                    <option selected={this.props.viewDetails.fontFamily === 'Verdana'} value=\"Verdana\">Verdana</option>\n                                    <option selected={this.props.viewDetails.fontFamily === 'Roboto'} value=\"Roboto\">Roboto</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n      viewDetails: state.viewDetails\n    }\n}\n\nexport default connect(mapStateToProps)(DisplaySection);"]},"metadata":{},"sourceType":"module"}