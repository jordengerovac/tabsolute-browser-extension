{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor() {\n    super();\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.state = {\n      photoBackground: \"true\",\n      photo: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const currentState = store.getState();\n\n    if (currentState.photo) {\n      if (currentState.photo.loading) {\n        this.props.fetchPhoto();\n      } else {\n        console.log('here');\n        this.state.photo = currentState.photo.photo;\n      }\n    }\n  }\n\n  render() {\n    const currentState = store.getState();\n    var photoURL = \"\";\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n\n    if (this.props.loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this);\n    } else {\n      var photoURL = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        photoURL = this.props.photo.urls.regular;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        style: {\n          backgroundImage: 'url(' + photoURL + ')',\n          width: '100vw',\n          height: '100vh',\n          backgroundSize: 'cover',\n          margin: '0',\n          padding: '0',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: '#202124'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SettingsBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n            theme: theme,\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: this.state.photoBackground === \"true\",\n              onClick: this.togglePhotoBackground,\n              color: \"primary\",\n              name: \"photoBackground\",\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  photo: state.photo.photo,\n  loading: state.photo.loading\n});\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","loadState","saveState","store","DashboardView","Component","constructor","togglePhotoBackground","toggle","state","photoBackground","setState","localStorage","setItem","JSON","stringify","photo","componentDidMount","currentState","getState","loading","props","console","log","render","photoURL","theme","palette","primary","main","urls","regular","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","position","bottom","mapStateToProps"],"mappings":"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","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\n\nclass DashboardView extends React.Component {\n    constructor() {\n        super();\n        this.state = ({\n            photoBackground: \"true\",\n            photo: \"\"\n        })\n    }\n\n    componentDidMount() {\n      const currentState = store.getState();\n      if (currentState.photo) {\n        if (currentState.photo.loading) {\n          this.props.fetchPhoto();\n        }\n        else {\n          console.log('here')\n          this.state.photo = currentState.photo.photo\n        }\n      }\n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n\n    render() {\n      const currentState = store.getState();\n      var photoURL = \"\";\n      const theme = createMuiTheme({\n          palette: {\n            primary: {\n              main: '#4495F6'\n            }\n          }\n        });\n\n        if (this.props.loading) {\n          return <p>Loading...</p>\n        }\n        else {\n          var photoURL = \"\";\n          if (this.state.photoBackground === \"true\") {\n            photoURL = this.props.photo.urls.regular;\n          }\n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + photoURL + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n              <SettingsBar />\n                <div style={{position: 'absolute', bottom: '0px'}}>\n                    <MuiThemeProvider theme={theme}>\n                    <Switch\n                        checked={this.state.photoBackground === \"true\"}\n                        onClick={this.togglePhotoBackground}\n                        color=\"primary\"\n                        name=\"photoBackground\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                    </MuiThemeProvider>\n                </div>\n            </div>\n        )\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    photo: state.photo.photo,\n    loading: state.photo.loading\n})\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);"]},"metadata":{},"sourceType":"module"}