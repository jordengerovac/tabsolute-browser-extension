{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleSettings = () => {\n      this.setState({\n        settingsVisible: !this.state.settingsVisible\n      });\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n      localStorage.setItem(\"name\", event.target.value);\n    };\n\n    this.handleCityChange = event => {\n      if (event.key === \"Enter\") {\n        this.setState({\n          city: event.target.value\n        });\n        this.getWeatherStatus(event.target.value);\n      }\n    };\n\n    this.tick = () => {\n      this.setState({\n        time: new Date()\n      });\n\n      if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n        localStorage.setItem(\"refresh\", \"true\");\n      }\n    };\n\n    this.counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({\n        count: this.state.count + 1\n      });\n      localStorage.setItem(\"count\", this.state.count + 1);\n    };\n\n    this.state = {\n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      city: \"toronto\",\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      widgets: [{\n        type: \"name\",\n        value: \"\"\n      }, {\n        type: \"weather\",\n        value: \"mississauga\",\n        feelsLike: \"\",\n        temp: \"\",\n        clouds: \"\"\n      }, {\n        type: \"scores\",\n        value: \"nba\"\n      }]\n    };\n  }\n\n  getWeatherStatus(city) {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n    console.log('here');\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n      if (result.hasOwnProperty(\"main\")) {\n        this.setState({\n          temp: result.main.temp,\n          feelsLike: result.main.feels_like,\n          clouds: result.weather[0].clouds\n        });\n      }\n    }, error => {\n      console.log(\"error\");\n    });\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    }); // GET photo\n\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY).then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          photo: result[random_num].urls.regular\n        });\n        localStorage.setItem(\"photo\", result[random_num].urls.regular);\n        localStorage.setItem(\"refresh\", \"false\");\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(\"error\");\n      });\n    } // GET weather data\n\n\n    this.getWeatherStatus(this.state.city);\n    const interval = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (this.state.time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (this.state.time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (this.state.time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: 'url(' + this.state.photo + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SettingsBar, {\n        settingsVisible: this.state.settingsVisible,\n        toggleSettings: this.toggleSettings,\n        handleNameChange: this.handleNameChange,\n        name: this.state.name,\n        city: this.state.city,\n        handleCityChange: this.handleCityChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'white',\n            fontSize: '22px',\n            margin: '7px'\n          },\n          className: \"fas fa-cog\",\n          onClick: this.toggleSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherStatus, {\n          city: this.state.city,\n          feelsLike: this.state.feelsLike,\n          temp: this.state.temp,\n          clouds: this.state.clouds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [\"Good \", greeting, \", \", this.state.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [this.state.time.toLocaleTimeString().split(\":\")[0], \":\", this.state.time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js"],"names":["React","useState","useEffect","SettingsBar","WeatherStatus","App","Component","constructor","toggleSettings","setState","settingsVisible","state","handleNameChange","event","name","target","value","localStorage","setItem","handleCityChange","key","city","getWeatherStatus","tick","time","Date","getMinutes","getSeconds","counter","count","photo","refresh","feelsLike","temp","clouds","widgets","type","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","console","log","fetch","then","res","json","result","hasOwnProperty","main","feels_like","weather","error","componentDidMount","UNSPLASH_API_KEY","REACT_APP_UNSPLASH_API_KEY","parsedCount","Number","getItem","getPhoto","String","getRefresh","getName","random_num","Math","floor","random","length","urls","regular","interval","setInterval","render","greeting","ampm","getHours","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","color","fontSize","textAlign","toLocaleTimeString","split"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      city: \"toronto\",\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      widgets: [\n        {\n          type: \"name\",\n          value: \"\", \n        },\n        {\n          type: \"weather\",\n          value: \"mississauga\",\n          feelsLike: \"\",\n          temp: \"\",\n          clouds: \"\",\n        },\n        {\n          type: \"scores\",\n          value: \"nba\"\n        }\n      ]\n    };\n  }\n\n  toggleSettings = () => {\n    this.setState({\n      settingsVisible: !this.state.settingsVisible\n    })\n  }\n\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value\n    });\n    localStorage.setItem(\"name\", event.target.value);\n  }\n\n  getWeatherStatus(city) {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    console.log('here');\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY)\n      .then(res => res.json())\n      .then(\n      (result) => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp: result.main.temp,\n            feelsLike: result.main.feels_like,\n            clouds: result.weather[0].clouds\n          });\n        }\n      },\n      (error) => {\n          console.log(\"error\")\n      }\n    )\n}\n\n  handleCityChange = (event) => {\n    if (event.key === \"Enter\") {\n      this.setState({\n        city: event.target.value\n      });\n      this.getWeatherStatus(event.target.value);\n    }\n  }\n\n  tick = () => {\n    this.setState({\n      time: new Date()\n    });\n    if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n      localStorage.setItem(\"refresh\", \"true\");\n    }\n  }\n\n  counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({count: this.state.count + 1});\n      localStorage.setItem(\"count\", this.state.count + 1);\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    })\n\n    // GET photo\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular\n            });\n            localStorage.setItem(\"photo\", result[random_num].urls.regular);\n            localStorage.setItem(\"refresh\", \"false\");\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n    }\n\n    // GET weather data\n    this.getWeatherStatus(this.state.city);\n\n      const interval = setInterval(() => {\n        this.tick();\n      }, 1000);\n  }\n\n  render(){\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n    if (this.state.time.getHours() >= 21) {\n      greeting = \"night\";\n    }\n    else if (this.state.time.getHours() >= 18) {\n      greeting = \"evening\";\n    }\n    else if (this.state.time.getHours() >= 12) {\n      greeting = \"afternoon\"\n    }\n    else {\n      greeting = \"morning\"\n    }\n\n    return (\n      <div style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat'}}>\n        <SettingsBar settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} name={this.state.name} city={this.state.city} handleCityChange={this.handleCityChange}/>\n        <div className=\"settings\">\n          <i style={{color: 'white', fontSize: '22px', margin: '7px'}} className=\"fas fa-cog\" onClick={this.toggleSettings}></i>\n          <WeatherStatus city={this.state.city} feelsLike={this.state.feelsLike} temp={this.state.temp} clouds={this.state.clouds} />\n        </div>\n          <div className=\"centered\" style={{textAlign: 'center'}}>\n            <h3 style={{margin: '0', color: 'white'}}>Good {greeting}, {this.state.name}</h3>\n            <h1 style={{margin: '0', color: 'white'}}>{this.state.time.toLocaleTimeString().split(\":\")[0]}:{this.state.time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}