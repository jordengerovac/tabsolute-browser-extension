{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/BrowserExtensionProjects/redux-tabsolute/src/components/Weather.js\";\nimport '../App.css';\nimport React from 'react';\nimport store from '../store';\nimport { UPDATE_WEATHER_WIDGET } from '../actions/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weather extends React.Component {\n  componentDidMount() {\n    if (this.props.widget.value !== \"\") this.getWeather();\n  }\n\n  getWeather() {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.widget.value.split(\":@:\")[0] + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n      var city = this.props.widget.value.split(\":@:\")[0];\n      var temp_min = result.main.temp_min;\n      var temp_max = result.main.temp_max;\n      var clouds = result.weather[0].description;\n      var value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds;\n      var payload = {\n        type: UPDATE_WEATHER_WIDGET,\n        payload: value,\n        id: this.props.widget.id\n      };\n      store.dispatch(payload);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    var clouds = String(this.props.widget.value.split(\":@:\")[3]);\n    var icon = \"\";\n\n    if (clouds.includes(\"rain\")) {\n      icon = \"fas fa-cloud-rain\";\n    } else if (clouds.includes(\"snow\")) {\n      icon = \"fas fa-snowflake\";\n    } else if (clouds.includes(\"clouds\")) {\n      icon = \"fas fa-cloud\";\n    } else if (clouds.includes(\"clear\")) {\n      icon = \"fas fa-sun\";\n    } else {\n      icon = \"fas fa-smog\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right',\n        margin: '7px',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.widget.value.split(\":@:\")[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: icon,\n          style: {\n            fontSize: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '6px'\n            },\n            children: parseInt(this.props.widget.value.split(\":@:\")[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '6px'\n            },\n            children: parseInt(this.props.widget.value.split(\":@:\")[2])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/BrowserExtensionProjects/redux-tabsolute/src/components/Weather.js"],"names":["React","store","UPDATE_WEATHER_WIDGET","Weather","Component","componentDidMount","props","widget","value","getWeather","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","fetch","split","then","res","json","result","city","temp_min","main","temp_max","clouds","weather","description","payload","type","id","dispatch","catch","error","console","log","render","String","icon","includes","textAlign","margin","fontSize","display","font","justifyContent","parseInt"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,KAA4B,EAAhC,EACI,KAAKC,UAAL;AACP;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMC,eAAe,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAjE;AACAC,IAAAA,KAAK,CAAC,uDAAuD,KAAKR,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAvD,GAAiG,sBAAjG,GAA0HL,eAA3H,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGCG,MAAD,IAAY;AACR,UAAIC,IAAI,GAAG,KAAKd,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAX;AACA,UAAIM,QAAQ,GAAGF,MAAM,CAACG,IAAP,CAAYD,QAA3B;AACA,UAAIE,QAAQ,GAAGJ,MAAM,CAACG,IAAP,CAAYC,QAA3B;AACA,UAAIC,MAAM,GAAGL,MAAM,CAACM,OAAP,CAAe,CAAf,EAAkBC,WAA/B;AACA,UAAIlB,KAAK,GAAGY,IAAI,GAAG,KAAP,GAAeC,QAAf,GAA0B,KAA1B,GAAkCE,QAAlC,GAA6C,KAA7C,GAAqDC,MAAjE;AAEA,UAAIG,OAAO,GAAG;AACVC,QAAAA,IAAI,EAAE1B,qBADI;AAEVyB,QAAAA,OAAO,EAAEnB,KAFC;AAGVqB,QAAAA,EAAE,EAAE,KAAKvB,KAAL,CAAWC,MAAX,CAAkBsB;AAHZ,OAAd;AAKA5B,MAAAA,KAAK,CAAC6B,QAAN,CAAeH,OAAf;AACH,KAhBD,EAiBCI,KAjBD,CAiBO,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAnBD;AAoBH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIX,MAAM,GAAGY,MAAM,CAAC,KAAK9B,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD,CAAnB;AACA,QAAIsB,IAAI,GAAG,EAAX;;AACA,QAAIb,MAAM,CAACc,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBD,MAAAA,IAAI,GAAG,mBAAP;AACH,KAFD,MAGK,IAAIb,MAAM,CAACc,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAC9BD,MAAAA,IAAI,GAAG,kBAAP;AACH,KAFI,MAGA,IAAIb,MAAM,CAACc,QAAP,CAAgB,QAAhB,CAAJ,EAA+B;AAChCD,MAAAA,IAAI,GAAG,cAAP;AACH,KAFI,MAGA,IAAIb,MAAM,CAACc,QAAP,CAAgB,OAAhB,CAAJ,EAA8B;AAC/BD,MAAAA,IAAI,GAAG,YAAP;AACH,KAFI,MAGA;AACDA,MAAAA,IAAI,GAAG,aAAP;AACH;;AACD,wBACI;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAE,OAAZ;AAAqBC,QAAAA,MAAM,EAAE,KAA7B;AAAoCC,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWC,MAAX,CAAkBmC,OAAlB,CAA0BC,IAA1B,GAAiC;AAA/E,OAAZ;AAAA,8BACI;AAAA,kBAAI,KAAKrC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAG,UAAA,SAAS,EAAEsB,IAAd;AAAqB,UAAA,KAAK,EAAE;AAACI,YAAAA,QAAQ,EAAE;AAAX;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE,MAAV;AAAkBE,YAAAA,cAAc,EAAE;AAAlC,WAAZ;AAAA,kCACI;AAAG,YAAA,KAAK,EAAE;AAACJ,cAAAA,MAAM,EAAE;AAAT,aAAV;AAAA,sBAA4BK,QAAQ,CAAC,KAAKvC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,KAAK,EAAE;AAACyB,cAAAA,MAAM,EAAE;AAAT,aAAV;AAAA,sBAA4BK,QAAQ,CAAC,KAAKvC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBO,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA5DiC;;AAgEtC,eAAeZ,OAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport store from '../store';\nimport { UPDATE_WEATHER_WIDGET } from '../actions/types';\n\nclass Weather extends React.Component {\n    componentDidMount() {\n        if (this.props.widget.value !== \"\")\n            this.getWeather();\n    }\n\n    getWeather() {\n        const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.widget.value.split(\":@:\")[0] + '&units=metric&appid=' + WEATHER_API_KEY)\n        .then(res => res.json())\n        .then(\n        (result) => {\n            var city = this.props.widget.value.split(\":@:\")[0];\n            var temp_min = result.main.temp_min;\n            var temp_max = result.main.temp_max;\n            var clouds = result.weather[0].description;\n            var value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds;\n            \n            var payload = {\n                type: UPDATE_WEATHER_WIDGET,\n                payload: value,\n                id: this.props.widget.id\n            }\n            store.dispatch(payload);\n        })\n        .catch(function(error) {\n            console.log(error);\n        });\n    }\n\n    render() {\n        var clouds = String(this.props.widget.value.split(\":@:\")[3]);\n        var icon = \"\";\n        if (clouds.includes(\"rain\")) {\n            icon = \"fas fa-cloud-rain\";\n        }\n        else if (clouds.includes(\"snow\")) {\n            icon = \"fas fa-snowflake\";\n        }\n        else if (clouds.includes(\"clouds\")) {\n            icon = \"fas fa-cloud\";\n        }\n        else if (clouds.includes(\"clear\")) {\n            icon = \"fas fa-sun\";\n        }\n        else {\n            icon = \"fas fa-smog\";\n        }\n        return(\n            <div style={{textAlign: 'right', margin: '7px', fontSize: this.props.widget.display.font + 'px'}}>\n                <p>{this.props.widget.value.split(\":@:\")[0]}</p>\n                <div>\n                    <i className={icon}  style={{fontSize: '40px'}}></i>\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <p style={{margin: '6px'}}>{parseInt(this.props.widget.value.split(\":@:\")[1])}</p>\n                        <p style={{margin: '6px'}}>{parseInt(this.props.widget.value.split(\":@:\")[2])}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}