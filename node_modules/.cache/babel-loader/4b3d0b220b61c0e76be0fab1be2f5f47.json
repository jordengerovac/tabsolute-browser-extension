{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/components/WeatherStatus.js\";\nimport '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport tabsolute from '../images/tabsolutelogo2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeatherStatus extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getWeatherStatus() {\n    this.props.handleWeatherChange();\n    /*\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.city + '&units=metric&appid=' + WEATHER_API_KEY)\n    .then(res => res.json())\n        .then(\n        (result) => {\n            this.props.handleWeatherChange(result);\n    },\n        (error) => {\n            console.log(\"error\")\n        }\n    )\n    */\n  }\n\n  componentDidMount() {\n    this.getWeatherStatus();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: 'right',\n        textAlign: 'right',\n        margin: '7px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"City: \", this.props.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temp: \", this.props.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Feels Like: \", this.props.feelsLike]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clouds: \", this.props.clouds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherStatus;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/components/WeatherStatus.js"],"names":["React","useState","useEffect","tabsolute","WeatherStatus","Component","constructor","props","getWeatherStatus","handleWeatherChange","componentDidMount","render","float","textAlign","margin","city","temp","feelsLike","clouds"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,gBAAgB,GAAG;AACf,SAAKD,KAAL,CAAWE,mBAAX;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,gBAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,SAAS,EAAE,OAA5B;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAAZ;AAAA,8BACI;AAAA,6BAAU,KAAKP,KAAL,CAAWQ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAU,KAAKR,KAAL,CAAWS,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mCAAgB,KAAKT,KAAL,CAAWU,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BAAY,KAAKV,KAAL,CAAWW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnCuC;;AAsC5C,eAAed,aAAf","sourcesContent":["import '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport tabsolute from '../images/tabsolutelogo2.png';\n\nclass WeatherStatus extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getWeatherStatus() {\n        this.props.handleWeatherChange();\n        /*\n        const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.city + '&units=metric&appid=' + WEATHER_API_KEY)\n\t\t    .then(res => res.json())\n            .then(\n            (result) => {\n                this.props.handleWeatherChange(result);\n\t\t    },\n            (error) => {\n                console.log(\"error\")\n            }\n        )\n        */\n    }\n\n    componentDidMount() {\n        this.getWeatherStatus();\n    }\n\n    render() {\n        return(\n            <div style={{float: 'right', textAlign: 'right', margin: '7px'}}>\n                <p>City: {this.props.city}</p>\n                <p>Temp: {this.props.temp}</p>\n                <p>Feels Like: {this.props.feelsLike}</p>\n                <p>Clouds: {this.props.clouds}</p>\n            </div>\n        )\n    }\n}\n\nexport default WeatherStatus;"]},"metadata":{},"sourceType":"module"}