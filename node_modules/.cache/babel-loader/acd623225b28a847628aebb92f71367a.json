{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/widgets/WeatherWidget.js\";\nimport '../../App.css';\nimport React from 'react';\nimport { deleteWidget } from '../../actions/widgetActions';\nimport { connect } from 'react-redux';\nimport store from '../../store';\nimport { UPDATE_WEATHER_WIDGET } from '../../actions/types';\nimport WidgetCustomization from '../customization/WidgetCustomization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeatherWidget extends React.Component {\n  constructor() {\n    super();\n\n    this.changeWeatherValue = event => {\n      if (event.key === \"Enter\") {\n        this.getWeather(event.target.value);\n      }\n    };\n\n    this.toggleDisplaySettings = () => {\n      this.setState({\n        displaySettingsVisible: !this.state.displaySettingsVisible\n      });\n    };\n\n    this.getWeather = cityValue => {\n      const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n      fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityValue + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n        const city = cityValue;\n        const temp_min = result.main.temp_min;\n        const temp_max = result.main.temp_max;\n        const clouds = result.weather[0].description;\n        const value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds;\n        const payload = {\n          type: UPDATE_WEATHER_WIDGET,\n          payload: value,\n          id: this.props.widget.id\n        };\n        store.dispatch(payload);\n      });\n    };\n\n    this.state = {\n      displaySettingsVisible: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.widget.value !== \"\") this.getWeather(this.props.widget.value.split(\":@:\")[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#2D3339',\n        padding: '10px',\n        margin: '0px 10px 10px 10px',\n        borderRadius: '7px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          margin: '0px 10px 10px 0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            float: 'left',\n            color: 'white',\n            fontWeight: 'bolder'\n          },\n          children: this.props.widget.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: this.toggleDisplaySettings,\n            id: this.props.widget.id,\n            style: {\n              color: 'white',\n              cursor: 'pointer',\n              margin: '0px 5px 0px 5px'\n            },\n            class: \"fas fa-wrench\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              color: 'white',\n              cursor: 'pointer',\n              margin: '0px 0px 0px 5px'\n            },\n            class: \"fas fa-trash-alt\",\n            onClick: this.props.deleteWidget,\n            id: this.props.widget.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: this.props.widget.id,\n        type: \"text\",\n        placeholder: \"City\",\n        defaultValue: this.props.widget.value.split(\":@:\")[0],\n        onKeyPress: this.changeWeatherValue,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), this.state.displaySettingsVisible ? /*#__PURE__*/_jsxDEV(WidgetCustomization, {\n        widget: this.props.widget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 54\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    widgetDetails: state.widgetDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  deleteWidget\n})(WeatherWidget);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/widgets/WeatherWidget.js"],"names":["React","deleteWidget","connect","store","UPDATE_WEATHER_WIDGET","WidgetCustomization","WeatherWidget","Component","constructor","changeWeatherValue","event","key","getWeather","target","value","toggleDisplaySettings","setState","displaySettingsVisible","state","cityValue","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","fetch","then","res","json","result","city","temp_min","main","temp_max","clouds","weather","description","payload","type","id","props","widget","dispatch","componentDidMount","split","render","backgroundColor","padding","margin","borderRadius","textAlign","float","color","fontWeight","cursor","marginTop","mapStateToProps","ownProps","widgetDetails"],"mappings":"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","sourcesContent":["import '../../App.css';\nimport React from 'react';\nimport { deleteWidget } from '../../actions/widgetActions';\nimport { connect } from 'react-redux';\nimport store from '../../store';\nimport { UPDATE_WEATHER_WIDGET } from '../../actions/types';\nimport WidgetCustomization from '../customization/WidgetCustomization';\n\nclass WeatherWidget extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            displaySettingsVisible: false\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.widget.value !== \"\")\n            this.getWeather(this.props.widget.value.split(\":@:\")[0]);\n    }\n\n    changeWeatherValue = (event) => {\n        if (event.key === \"Enter\") {\n            this.getWeather(event.target.value);\n        }\n    }\n\n    toggleDisplaySettings = () => {\n        this.setState({\n            displaySettingsVisible: !this.state.displaySettingsVisible\n        })\n    }\n\n    getWeather = (cityValue) => {\n        const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=' + cityValue + '&units=metric&appid=' + WEATHER_API_KEY)\n        .then(res => res.json())\n        .then(\n        (result) => {\n            const city = cityValue;\n            const temp_min = result.main.temp_min;\n            const temp_max = result.main.temp_max;\n            const clouds = result.weather[0].description;\n            const value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds\n            \n            const payload = {\n                type: UPDATE_WEATHER_WIDGET,\n                payload: value,\n                id: this.props.widget.id\n            }\n            store.dispatch(payload);\n        })\n    }\n\n    render() {\n        return(\n            <div style={{backgroundColor: '#2D3339', padding: '10px', margin: '0px 10px 10px 10px', borderRadius: '7px'}}>\n                <div style={{textAlign: 'left', margin: '0px 10px 10px 0px'}}>\n                    <p style={{float: 'left', color: 'white', fontWeight: 'bolder'}}>{this.props.widget.type}</p>\n                    <div style={{float: 'right'}}>\n                        <i onClick={this.toggleDisplaySettings} id={this.props.widget.id} style={{color: 'white', cursor: 'pointer', margin: '0px 5px 0px 5px'}} class=\"fas fa-wrench\"></i>\n                        <i style={{color: 'white', cursor: 'pointer', margin: '0px 0px 0px 5px'}} class=\"fas fa-trash-alt\" onClick={this.props.deleteWidget} id={this.props.widget.id}></i>\n                    </div>\n                </div>\n                <input id={this.props.widget.id} type=\"text\" placeholder=\"City\" defaultValue={this.props.widget.value.split(\":@:\")[0]} onKeyPress={this.changeWeatherValue} style={{marginTop: '10px'}}></input>\n                {this.state.displaySettingsVisible ? <WidgetCustomization widget={this.props.widget} /> : null}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n      widgetDetails: state.widgetDetails\n    }\n}\n\nexport default connect(mapStateToProps, { deleteWidget })(WeatherWidget);"]},"metadata":{},"sourceType":"module"}