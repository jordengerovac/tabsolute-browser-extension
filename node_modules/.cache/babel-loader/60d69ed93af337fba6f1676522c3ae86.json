{"ast":null,"code":"import { ADD_LINK_TILE, DELETE_LINK_TILE, UPDATE_LINK_TILE, TOGGLE_LINKS_ON_DASHBOARD, MOVE_LINK_TILE } from '../actions/types';\nimport { v4 as uuid } from 'uuid';\nconst initialState = {\n  showLinksInDashboard: false,\n  tiles: [{\n    id: uuid(),\n    name: \"Twitter\",\n    value: \"https://www.twitter.com\",\n    icon: \"fab fa-twitter\"\n  }, {\n    id: uuid(),\n    name: \"Facebook\",\n    value: \"https://www.facebook.com\",\n    icon: \"fab fa-facebook\"\n  }, {\n    id: uuid(),\n    name: \"YouTube\",\n    value: \"https://www.youtube.com\",\n    icon: \"fab fa-youtube\"\n  }]\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_LINK_TILE:\n      var newLinkTile = {};\n      newLinkTile = {\n        id: uuid(),\n        name: \"Link\",\n        value: \"https://www.google.com\",\n        icon: \"fas fa-link\"\n      };\n      return { ...state,\n        tiles: [...state.tiles, newLinkTile]\n      };\n\n    case DELETE_LINK_TILE:\n      var newLinkTileState = state.tiles.filter(tile => action.payload.target.id !== tile.id);\n      return { ...state,\n        tiles: newLinkTileState\n      };\n\n    case UPDATE_LINK_TILE:\n      var attribute = action.payload.target.name;\n      var newUpdateState = state.tiles.map(tile => {\n        if (tile.id === action.payload.target.id) {\n          if (attribute === \"name\") {\n            tile.name = action.payload.target.value;\n          } else if (attribute === \"icon\") {\n            tile.icon = action.payload.target.value;\n          } else {\n            tile.value = action.payload.target.value;\n          }\n        }\n\n        return tile;\n      });\n      return { ...state,\n        tiles: newUpdateState\n      };\n\n    case TOGGLE_LINKS_ON_DASHBOARD:\n      return { ...state,\n        showLinksInDashboard: !state.showLinksInDashboard\n      };\n\n    case MOVE_LINK_TILE:\n      var swappedTileState;\n\n      if (action.payload.target.className === \"fas fa-arrow-down\") {\n        if (state.tiles.length > 1 && action.payload.target.id !== state.tiles[state.tiles.length - 1].id) {\n          for (var i = 0; i < state.tiles.length; i++) {\n            if (state.tiles[i].id === action.payload.target.id) {\n              swappedTileState = immutableSwap(state.tiles, i, i + 1);\n            }\n          }\n\n          return { ...state,\n            tiles: swappedTileState\n          };\n        }\n      } else if (action.payload.target.className === \"fas fa-arrow-up\") {\n        if (state.tiles.length > 1 && action.payload.target.id !== state.tiles[0].id) {\n          for (var j = 0; j < state.tiles.length; j++) {\n            if (state.tiles[j].id === action.payload.target.id) {\n              swappedTileState = immutableSwap(state.tiles, j, j - 1);\n            }\n          }\n\n          return { ...state,\n            tiles: swappedTileState\n          };\n        }\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nconst immutableSwap = (widgets, firstIndex, secondIndex) => {\n  const result = [...widgets];\n  [result[firstIndex], result[secondIndex]] = [result[secondIndex], result[firstIndex]];\n  return result;\n};","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/BrowserExtensionProjects/redux-tabsolute/src/reducers/linkTileReducer.js"],"names":["ADD_LINK_TILE","DELETE_LINK_TILE","UPDATE_LINK_TILE","TOGGLE_LINKS_ON_DASHBOARD","MOVE_LINK_TILE","v4","uuid","initialState","showLinksInDashboard","tiles","id","name","value","icon","state","action","type","newLinkTile","newLinkTileState","filter","tile","payload","target","attribute","newUpdateState","map","swappedTileState","className","length","i","immutableSwap","j","widgets","firstIndex","secondIndex","result"],"mappings":"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","sourcesContent":["import { ADD_LINK_TILE, DELETE_LINK_TILE, UPDATE_LINK_TILE, TOGGLE_LINKS_ON_DASHBOARD, MOVE_LINK_TILE } from '../actions/types';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = {\n    showLinksInDashboard: false,\n    tiles: [\n        {\n          id: uuid(),\n          name: \"Twitter\",\n          value: \"https://www.twitter.com\",\n          icon: \"fab fa-twitter\"\n        },\n        {\n          id: uuid(),\n          name: \"Facebook\",\n          value: \"https://www.facebook.com\",\n          icon: \"fab fa-facebook\"\n        },\n        {\n          id: uuid(),\n          name: \"YouTube\",\n          value: \"https://www.youtube.com\",\n          icon: \"fab fa-youtube\"\n        }\n    ]\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n      case ADD_LINK_TILE:\n        var newLinkTile = {}\n        newLinkTile = {\n          id: uuid(),\n          name: \"Link\",\n          value: \"https://www.google.com\",\n          icon: \"fas fa-link\"\n        }\n        return {\n          ...state,\n          tiles: [...state.tiles, newLinkTile]\n        }\n      case DELETE_LINK_TILE:\n        var newLinkTileState = state.tiles.filter(tile => action.payload.target.id !== tile.id);\n        return {\n          ...state,\n          tiles: newLinkTileState\n        }\n      case UPDATE_LINK_TILE:\n        var attribute = action.payload.target.name;\n        var newUpdateState = state.tiles.map((tile) => {\n          if (tile.id === action.payload.target.id) {\n            if (attribute === \"name\") {\n              tile.name = action.payload.target.value\n            }\n            else if (attribute === \"icon\") {\n              tile.icon = action.payload.target.value\n            }\n            else {\n              tile.value = action.payload.target.value\n            }\n          }\n        return tile;\n        })\n        return {\n          ...state,\n          tiles: newUpdateState\n        }\n      case TOGGLE_LINKS_ON_DASHBOARD:\n        return {\n          ...state,\n          showLinksInDashboard: !state.showLinksInDashboard\n        };\n      case MOVE_LINK_TILE:\n        var swappedTileState;\n          if (action.payload.target.className === \"fas fa-arrow-down\") {\n            if (state.tiles.length > 1 && action.payload.target.id !== state.tiles[state.tiles.length-1].id) {\n              for(var i = 0; i < state.tiles.length; i++) {\n                if (state.tiles[i].id === action.payload.target.id) {\n                  swappedTileState = immutableSwap(state.tiles, i, i+1);\n                }\n              }\n              return {\n                ...state,\n                tiles: swappedTileState\n              }\n            }\n          }\n          else if (action.payload.target.className === \"fas fa-arrow-up\") {\n            if (state.tiles.length > 1 && action.payload.target.id !== state.tiles[0].id) {\n              for(var j = 0; j < state.tiles.length; j++) {\n                if (state.tiles[j].id === action.payload.target.id) {\n                  swappedTileState = immutableSwap(state.tiles, j, j-1);\n                }\n              }\n              return {\n                ...state,\n                tiles: swappedTileState\n              }\n            }\n          }\n          return state;\n      default:\n        return state\n    }\n}\n\nconst immutableSwap = (widgets, firstIndex, secondIndex) => {\n  const result = [...widgets];\n  [result[firstIndex], result[secondIndex]] = [result[secondIndex], result[firstIndex]];\n  return result;\n}"]},"metadata":{},"sourceType":"module"}