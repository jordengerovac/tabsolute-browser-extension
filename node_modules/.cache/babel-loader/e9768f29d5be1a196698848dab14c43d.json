{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Weather.js\";\nimport '../App.css';\nimport React from 'react';\nimport store from '../store';\nimport { UPDATE_WEATHER_WIDGET } from '../actions/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weather extends React.Component {\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.widget.value + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n      const city = this.props.widget.value;\n      const temp_min = result.main.temp_min;\n      const temp_max = result.main.temp_max;\n      const clouds = result.weather[0].description;\n      const value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds;\n      const payload = {\n        type: UPDATE_WEATHER_WIDGET,\n        payload: value,\n        id: this.props.widget.id\n      };\n      store.dispatch(payload);\n    });\n  }\n\n  render() {\n    var clouds = String(this.props.widget.value.split(\":@:\")[3]);\n    var icon = \"\";\n\n    if (clouds.includes(\"rain\")) {\n      icon = \"fas fa-cloud-rain\";\n    } else if (clouds.includes(\"snow\")) {\n      icon = \"fas fa-snowflake\";\n    } else if (clouds.includes(\"clouds\")) {\n      icon = \"fas fa-cloud\";\n    } else if (clouds.includes(\"clear\")) {\n      icon = \"fas fa-sun\";\n    } else {\n      icon = \"fas fa-smog\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right',\n        margin: '7px',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.widget.value.split(\":@:\")[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: icon,\n          style: {\n            color: 'white',\n            fontSize: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '6px'\n            },\n            children: parseInt(this.props.widget.value.split(\":@:\")[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '6px'\n            },\n            children: parseInt(this.props.widget.value.split(\":@:\")[2])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Weather.js"],"names":["React","store","UPDATE_WEATHER_WIDGET","Weather","Component","componentDidMount","getWeather","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","fetch","props","widget","value","then","res","json","result","city","temp_min","main","temp_max","clouds","weather","description","payload","type","id","dispatch","render","String","split","icon","includes","textAlign","margin","fontSize","display","font","color","justifyContent","parseInt"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMC,eAAe,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAjE;AACAC,IAAAA,KAAK,CAAC,uDAAuD,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAzE,GAAiF,sBAAjF,GAA0GP,eAA3G,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGCG,MAAD,IAAY;AACR,YAAMC,IAAI,GAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBC,KAA/B;AACA,YAAMM,QAAQ,GAAGF,MAAM,CAACG,IAAP,CAAYD,QAA7B;AACA,YAAME,QAAQ,GAAGJ,MAAM,CAACG,IAAP,CAAYC,QAA7B;AACA,YAAMC,MAAM,GAAGL,MAAM,CAACM,OAAP,CAAe,CAAf,EAAkBC,WAAjC;AACA,YAAMX,KAAK,GAAGK,IAAI,GAAG,KAAP,GAAeC,QAAf,GAA0B,KAA1B,GAAkCE,QAAlC,GAA6C,KAA7C,GAAqDC,MAAnE;AAEA,YAAMG,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAEzB,qBADM;AAEZwB,QAAAA,OAAO,EAAEZ,KAFG;AAGZc,QAAAA,EAAE,EAAE,KAAKhB,KAAL,CAAWC,MAAX,CAAkBe;AAHV,OAAhB;AAKA3B,MAAAA,KAAK,CAAC4B,QAAN,CAAeH,OAAf;AACH,KAhBD;AAiBH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIP,MAAM,GAAGQ,MAAM,CAAC,KAAKnB,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBkB,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD,CAAnB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAIV,MAAM,CAACW,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AACzBD,MAAAA,IAAI,GAAG,mBAAP;AACH,KAFD,MAGK,IAAIV,MAAM,CAACW,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAC9BD,MAAAA,IAAI,GAAG,kBAAP;AACH,KAFI,MAGA,IAAIV,MAAM,CAACW,QAAP,CAAgB,QAAhB,CAAJ,EAA+B;AAChCD,MAAAA,IAAI,GAAG,cAAP;AACH,KAFI,MAGA,IAAIV,MAAM,CAACW,QAAP,CAAgB,OAAhB,CAAJ,EAA8B;AAC/BD,MAAAA,IAAI,GAAG,YAAP;AACH,KAFI,MAGA;AACDA,MAAAA,IAAI,GAAG,aAAP;AACH;;AACD,wBACI;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAE,OAAZ;AAAqBC,QAAAA,MAAM,EAAE,KAA7B;AAAoCC,QAAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWC,MAAX,CAAkByB,OAAlB,CAA0BC,IAA1B,GAAiC;AAA/E,OAAZ;AAAA,8BACI;AAAA,kBAAI,KAAK3B,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBkB,KAAxB,CAA8B,KAA9B,EAAqC,CAArC;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAG,UAAA,SAAS,EAAEC,IAAd;AAAqB,UAAA,KAAK,EAAE;AAACO,YAAAA,KAAK,EAAE,OAAR;AAAiBH,YAAAA,QAAQ,EAAE;AAA3B;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE,MAAV;AAAkBG,YAAAA,cAAc,EAAE;AAAlC,WAAZ;AAAA,kCACI;AAAG,YAAA,KAAK,EAAE;AAACL,cAAAA,MAAM,EAAE;AAAT,aAAV;AAAA,sBAA4BM,QAAQ,CAAC,KAAK9B,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBkB,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,KAAK,EAAE;AAACI,cAAAA,MAAM,EAAE;AAAT,aAAV;AAAA,sBAA4BM,QAAQ,CAAC,KAAK9B,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBkB,KAAxB,CAA8B,KAA9B,EAAqC,CAArC,CAAD;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAxDiC;;AA2DtC,eAAe7B,OAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport store from '../store';\nimport { UPDATE_WEATHER_WIDGET } from '../actions/types';\n\nclass Weather extends React.Component {\n    componentDidMount() {\n        this.getWeather();\n    }\n\n    getWeather() {\n        const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=' + this.props.widget.value + '&units=metric&appid=' + WEATHER_API_KEY)\n        .then(res => res.json())\n        .then(\n        (result) => {\n            const city = this.props.widget.value;\n            const temp_min = result.main.temp_min;\n            const temp_max = result.main.temp_max;\n            const clouds = result.weather[0].description;\n            const value = city + \":@:\" + temp_min + \":@:\" + temp_max + \":@:\" + clouds\n            \n            const payload = {\n                type: UPDATE_WEATHER_WIDGET,\n                payload: value,\n                id: this.props.widget.id\n            }\n            store.dispatch(payload);\n        })\n    }\n\n    render() {\n        var clouds = String(this.props.widget.value.split(\":@:\")[3]);\n        var icon = \"\";\n        if (clouds.includes(\"rain\")) {\n            icon = \"fas fa-cloud-rain\";\n        }\n        else if (clouds.includes(\"snow\")) {\n            icon = \"fas fa-snowflake\";\n        }\n        else if (clouds.includes(\"clouds\")) {\n            icon = \"fas fa-cloud\";\n        }\n        else if (clouds.includes(\"clear\")) {\n            icon = \"fas fa-sun\";\n        }\n        else {\n            icon = \"fas fa-smog\";\n        }\n        return(\n            <div style={{textAlign: 'right', margin: '7px', fontSize: this.props.widget.display.font + 'px'}}>\n                <p>{this.props.widget.value.split(\":@:\")[0]}</p>\n                <div>\n                    <i className={icon}  style={{color: 'white', fontSize: '40px'}}></i>\n                    <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <p style={{margin: '6px'}}>{parseInt(this.props.widget.value.split(\":@:\")[1])}</p>\n                        <p style={{margin: '6px'}}>{parseInt(this.props.widget.value.split(\":@:\")[2])}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}