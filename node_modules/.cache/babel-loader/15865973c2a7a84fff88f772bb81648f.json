{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.state = {\n      photoBackground: \"true\",\n      photo: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.photo); //this.props.fetchPhoto();\n\n    /*\n    if (this.props.photo) {\n      if (this.props.photo.loading === true){\n        this.props.fetchPhoto();\n        console.log('fetching')\n      }\n      else {\n        console.log('not fetching')\n        console.log(this.props.photo)\n      }\n    }\n    */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        backgroundImage: 'url(' + \"photoURL\" + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: '#202124'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    photo: state.photo,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView); //export default DashboardView;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","loadState","saveState","store","DashboardView","Component","constructor","props","togglePhotoBackground","toggle","state","photoBackground","setState","localStorage","setItem","JSON","stringify","photo","componentDidMount","console","log","render","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","mapStateToProps","loading"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,yBAArC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,qBA1BmB,GA0BK,MAAM;AAC1B,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI,KAAKC,KAAL,CAAWC,eAAX,KAA+B,MAAnC,EAA2C;AACzCF,QAAAA,MAAM,GAAG,OAAT;AACD,OAFD,MAGK;AACHA,QAAAA,MAAM,GAAG,MAAT;AACD;;AACD,WAAKG,QAAL,CAAc;AACZD,QAAAA,eAAe,EAAEF;AADL,OAAd,EAEG,MAAMI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB,CAA9B,CAFT;AAGD,KArCgB;;AAEf,SAAKA,KAAL,GAAc;AACVC,MAAAA,eAAe,EAAE,MADP;AAEVM,MAAAA,KAAK,EAAE;AAFG,KAAd;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWU,KAAvB,EADkB,CAElB;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAeDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,SAAS,UAAT,GAAsB,GAAxC;AAA6CC,QAAAA,KAAK,EAAE,OAApD;AAA6DC,QAAAA,MAAM,EAAE,OAArE;AAA8EC,QAAAA,cAAc,EAAE,OAA9F;AAAuGC,QAAAA,MAAM,EAAE,GAA/G;AAAoHC,QAAAA,OAAO,EAAE,GAA7H;AAAkIC,QAAAA,gBAAgB,EAAE,WAApJ;AAAiKC,QAAAA,eAAe,EAAE;AAAlL;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9CuC;;AAkD5C,MAAMC,eAAe,GAAGpB,KAAK,IAAI;AAC/B,SAAM;AACJO,IAAAA,KAAK,EAAEP,KAAK,CAACO,KADT;AAEJc,IAAAA,OAAO,EAAErB,KAAK,CAACqB;AAFX,GAAN;AAID,CALD;;AAOA,eAAehC,OAAO,CAAC+B,eAAD,EAAkB;AAAE9B,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CAAf,C,CACA","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\n\nclass DashboardView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            photoBackground: \"true\",\n            photo: \"\"\n        })\n    }\n\n    componentDidMount() {\n      console.log(this.props.photo);\n      //this.props.fetchPhoto();\n      /*\n      if (this.props.photo) {\n        if (this.props.photo.loading === true){\n          this.props.fetchPhoto();\n          console.log('fetching')\n        }\n        else {\n          console.log('not fetching')\n          console.log(this.props.photo)\n        }\n      }\n      */\n      \n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n\n    render() {\n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + \"photoURL\" + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n            </div>\n        )\n        \n    }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    photo: state.photo,\n    loading: state.loading\n  }\n}\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);\n//export default DashboardView;"]},"metadata":{},"sourceType":"module"}