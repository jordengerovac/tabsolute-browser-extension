{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor() {\n    super();\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.state = {\n      photoBackground: \"true\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPhoto();\n  }\n\n  render() {\n    var photoObject = this.props.photo;\n    var photoURL = \"\";\n\n    if (this.state.photoBackground === \"true\") {\n      photoURL = photoObject.urls.regular;\n    }\n\n    var artist = photoObject.user.first_name + \" \" + photoObject.user.last_name;\n    var photoLink = photoObject.user.links.html;\n    var profileLink = photoObject.links.html;\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        backgroundImage: 'url(' + photoURL + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: '#202124'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  photo: state.photo.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","DashboardView","Component","constructor","togglePhotoBackground","toggle","state","photoBackground","setState","localStorage","setItem","JSON","stringify","componentDidMount","props","render","photoObject","photo","photoURL","urls","regular","artist","user","first_name","last_name","photoLink","links","html","profileLink","current_time","Date","greeting","ampm","getHours","theme","palette","primary","main","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","mapStateToProps","item"],"mappings":"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","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\n\nclass DashboardView extends React.Component {\n    constructor() {\n        super();\n        this.state = ({\n            photoBackground: \"true\"\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchPhoto()\n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n\n    render() {\n        var photoObject = this.props.photo;\n        var photoURL = \"\";\n        if (this.state.photoBackground === \"true\") {\n            photoURL = photoObject.urls.regular;\n        }\n        var artist = photoObject.user.first_name + \" \" + photoObject.user.last_name;\n        var photoLink = photoObject.user.links.html;\n        var profileLink = photoObject.links.html;\n        const current_time = new Date();\n        var greeting = \"\";\n        var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n        if (current_time.getHours() >= 21) {\n        greeting = \"night\";\n        }\n        else if (current_time.getHours() >= 18) {\n        greeting = \"evening\";\n        }\n        else if (current_time.getHours() >= 12) {\n        greeting = \"afternoon\"\n        }\n        else {\n        greeting = \"morning\"\n        }\n\n        const theme = createMuiTheme({\n        palette: {\n            primary: {\n            main: '#4495F6'\n            }\n        }\n        });\n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + photoURL + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n                \n                <p>here</p>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    photo: state.photo.item\n})\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);"]},"metadata":{},"sourceType":"module"}