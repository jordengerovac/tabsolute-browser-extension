{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleSettings = () => {\n      this.setState({\n        settingsVisible: !this.state.settingsVisible\n      });\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n      localStorage.setItem(\"name\", e.target.value);\n    };\n\n    this.addNewWidget = e => {\n      e.preventDefault();\n      const newWidget = {\n        id: uuid(),\n        type: e.target[0].value,\n        value: \"\"\n      };\n      this.setState({\n        widgets: [...this.state.widgets, newWidget]\n      });\n    };\n\n    this.getRandomQuote = () => {\n      fetch('https://type.fit/api/quotes').then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          quoteText: result[random_num].text,\n          quoteAuthor: result[random_num].author\n        });\n      });\n    };\n\n    this.getWeatherStatus = city => {\n      const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n      fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp: result.main.temp,\n            feelsLike: result.main.feels_like,\n            clouds: result.weather[0].description\n          });\n        }\n      }, error => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleCityChange = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          city: e.target.value\n        });\n        this.getWeatherStatus(e.target.value);\n      }\n    };\n\n    this.tick = () => {\n      this.setState({\n        time: new Date()\n      });\n\n      if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n        localStorage.setItem(\"refresh\", \"true\");\n      }\n    };\n\n    this.counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({\n        count: this.state.count + 1\n      });\n      localStorage.setItem(\"count\", this.state.count + 1);\n    };\n\n    this.state = {\n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      city: \"toronto\",\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      quoteText: \"\",\n      quoteAuthor: \"\",\n      widgets: [{\n        id: \"1\",\n        type: \"greeting\",\n        value: \"\"\n      }, {\n        id: \"2\",\n        type: \"time\",\n        value: \"\"\n      }, {\n        id: \"3\",\n        type: \"quote\",\n        value: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n    const getState = JSON.parse(localStorage.getItem(\"state\"));\n\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    } //console.log(getState);\n\n\n    this.setState(getState);\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    }); // GET photo\n\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY).then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          photo: result[random_num].urls.regular\n        });\n        localStorage.setItem(\"photo\", result[random_num].urls.regular);\n        localStorage.setItem(\"refresh\", \"false\");\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(\"error\");\n      });\n    } // GET weather data\n\n\n    this.getWeatherStatus(this.state.city); // GET random quote\n\n    this.getRandomQuote();\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: 'url(' + this.state.photo + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SettingsBar, {\n        settingsVisible: this.state.settingsVisible,\n        toggleSettings: this.toggleSettings,\n        handleNameChange: this.handleNameChange,\n        name: this.state.name,\n        city: this.state.city,\n        handleCityChange: this.handleCityChange,\n        addNewWidget: this.addNewWidget,\n        widgets: this.state.widgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'white',\n            fontSize: '22px',\n            margin: '7px'\n          },\n          className: \"fas fa-cog\",\n          onClick: this.toggleSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherStatus, {\n          city: this.state.city,\n          feelsLike: this.state.feelsLike,\n          temp: this.state.temp,\n          clouds: this.state.clouds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        style: {\n          textAlign: 'center'\n        },\n        children: this.state.widgets.map(widget => {\n          if (widget.type === \"greeting\") return /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0',\n              color: 'white'\n            },\n            children: [\"Good \", greeting, \", \", this.state.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 23\n          }, this);else if (widget.type === \"quote\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: 'white'\n                },\n                children: this.state.quoteText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  color: 'white'\n                },\n                children: [\"- \", this.state.quoteAuthor]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 84\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 23\n            }, this);\n          } else if (widget.type === \"time\") {\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                margin: '0',\n                color: 'white'\n              },\n              children: [current_time.toLocaleTimeString().split(\":\")[0], \":\", current_time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js"],"names":["React","SettingsBar","WeatherStatus","v4","uuid","App","Component","constructor","toggleSettings","setState","settingsVisible","state","handleNameChange","e","name","target","value","localStorage","setItem","addNewWidget","preventDefault","newWidget","id","type","widgets","getRandomQuote","fetch","then","res","json","result","random_num","Math","floor","random","length","quoteText","text","quoteAuthor","author","getWeatherStatus","city","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","hasOwnProperty","temp","main","feelsLike","feels_like","clouds","weather","description","error","console","log","handleCityChange","key","tick","time","Date","current_time","getMinutes","getSeconds","counter","count","photo","refresh","componentDidMount","UNSPLASH_API_KEY","REACT_APP_UNSPLASH_API_KEY","parsedCount","Number","getItem","getPhoto","String","getRefresh","getName","getState","JSON","parse","stringify","urls","regular","setInterval","render","greeting","ampm","getHours","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","color","fontSize","textAlign","map","widget","toLocaleTimeString","split"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\nimport { v4 as uuid } from 'uuid';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      city: \"toronto\",\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      quoteText: \"\",\n      quoteAuthor: \"\",\n      widgets: [\n        {\n          id: \"1\",\n          type: \"greeting\",\n          value: \"\", \n        },\n        {\n          id: \"2\",\n          type: \"time\",\n          value: \"\",\n        },\n        {\n          id: \"3\",\n          type: \"quote\",\n          value: \"\"\n        }\n      ]\n    };\n  }\n\n  toggleSettings = () => {\n    this.setState({\n      settingsVisible: !this.state.settingsVisible\n    })\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n    localStorage.setItem(\"name\", e.target.value);\n  }\n\n  addNewWidget = (e) => {\n    e.preventDefault();\n    const newWidget = {\n      id: uuid(),\n      type: e.target[0].value,\n      value: \"\"\n    }\n    this.setState({\n      widgets: [...this.state.widgets, newWidget]\n    })\n  }\n\n  getRandomQuote = () => {\n    fetch('https://type.fit/api/quotes')\n      .then(res => res.json())\n      .then(\n      (result) => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          quoteText: result[random_num].text,\n          quoteAuthor: result[random_num].author\n        })\n      }\n      )\n  }\n\n  getWeatherStatus = (city) => {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY)\n      .then(res => res.json())\n      .then(\n      (result) => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp: result.main.temp,\n            feelsLike: result.main.feels_like,\n            clouds: result.weather[0].description\n          });\n        }\n      },\n      (error) => {\n          console.log(\"error\")\n      }\n    )\n}\n\n  handleCityChange = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({\n        city: e.target.value\n      });\n      this.getWeatherStatus(e.target.value);\n    }\n  }\n\n  tick = () => {\n    this.setState({\n      time: new Date()\n    });\n    if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n      localStorage.setItem(\"refresh\", \"true\");\n    }\n  }\n\n  counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({count: this.state.count + 1});\n      localStorage.setItem(\"count\", this.state.count + 1);\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n\n    const getState = JSON.parse(localStorage.getItem(\"state\"));\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    }\n    //console.log(getState);\n    this.setState(getState);\n\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    })\n\n    // GET photo\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular\n            });\n            localStorage.setItem(\"photo\", result[random_num].urls.regular);\n            localStorage.setItem(\"refresh\", \"false\");\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n    }\n\n    // GET weather data\n    this.getWeatherStatus(this.state.city);\n\n    // GET random quote\n    this.getRandomQuote();\n\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render(){\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    }\n    else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    }\n    else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\"\n    }\n    else {\n      greeting = \"morning\"\n    }\n\n    return (\n      <div style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat'}}>\n        <SettingsBar settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} name={this.state.name} city={this.state.city} handleCityChange={this.handleCityChange} addNewWidget={this.addNewWidget} widgets={this.state.widgets} />\n        <div className=\"settings\">\n          <i style={{color: 'white', fontSize: '22px', margin: '7px'}} className=\"fas fa-cog\" onClick={this.toggleSettings}></i>\n          <WeatherStatus city={this.state.city} feelsLike={this.state.feelsLike} temp={this.state.temp} clouds={this.state.clouds} />\n        </div>\n          <div className=\"centered\" style={{textAlign: 'center'}}>\n          {this.state.widgets.map((widget) => {\n            if (widget.type === \"greeting\") \n              return (<h3 style={{margin: '0', color: 'white'}}>Good {greeting}, {this.state.name}</h3>)\n            else if (widget.type === \"quote\") {\n              return (<div><h4 style={{color: 'white'}}>{this.state.quoteText}</h4><h4 style={{color: 'white'}}>- {this.state.quoteAuthor}</h4></div>)\n             }\n            else if (widget.type === \"time\") {\n              return (<h1 style={{margin: '0', color: 'white'}}>{current_time.toLocaleTimeString().split(\":\")[0]}:{current_time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>)\n             }\n            }\n          )}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}