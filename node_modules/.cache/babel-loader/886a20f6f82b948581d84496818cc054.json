{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Time.js\";\nimport '../App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Time extends React.Component {\n  constructor() {\n    super();\n\n    this.tick = () => {\n      this.setState({\n        currentTime: new Date()\n      });\n    };\n\n    this.state = {\n      currentTime: new Date()\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    var ampm = this.state.getHours() >= 12 ? 'PM' : 'AM';\n    if (this.props.widget.value === \"12\") return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '0',\n        color: 'white',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [this.state.toLocaleTimeString().split(\":\")[0], \":\", this.state.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this);else return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '0',\n        color: 'white',\n        fontSize: this.props.widget.display.font + 'px'\n      },\n      children: [this.state.toTimeString().split(\":\")[0], \":\", this.state.toTimeString().split(\":\")[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default Time;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Time.js"],"names":["React","Time","Component","constructor","tick","setState","currentTime","Date","state","componentDidMount","setInterval","render","ampm","getHours","props","widget","value","margin","color","fontSize","display","font","toLocaleTimeString","split","toTimeString"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,IAPc,GAOP,MAAM;AACT,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE,IAAIC,IAAJ;AADH,OAAd;AAGH,KAXa;;AAEV,SAAKC,KAAL,GAAa;AACTF,MAAAA,WAAW,EAAE,IAAIC,IAAJ;AADJ,KAAb;AAGH;;AAQDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKN,IAAL;AACD,KAFQ,EAEN,IAFM,CAAX;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,QAAX,MAAyB,EAAzB,GAA8B,IAA9B,GAAqC,IAAhD;AACA,QAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,KAA4B,IAAhC,EACI,oBAAQ;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE,OAArB;AAA8BC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,OAAlB,CAA0BC,IAA1B,GAAiC;AAAzE,OAAX;AAAA,iBAA4F,KAAKb,KAAL,CAAWc,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAA5F,OAA4I,KAAKf,KAAL,CAAWc,kBAAX,GAAgCC,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAA5I,OAA4LX,IAA5L;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR,CADJ,KAGI,oBAAQ;AAAI,MAAA,KAAK,EAAE;AAACK,QAAAA,MAAM,EAAE,GAAT;AAAcC,QAAAA,KAAK,EAAE,OAArB;AAA8BC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,MAAX,CAAkBK,OAAlB,CAA0BC,IAA1B,GAAiC;AAAzE,OAAX;AAAA,iBAA4F,KAAKb,KAAL,CAAWgB,YAAX,GAA0BD,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAA5F,OAAsI,KAAKf,KAAL,CAAWgB,YAAX,GAA0BD,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAtI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACP;;AA1B8B;;AA6BnC,eAAetB,IAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\n\nclass Time extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            currentTime: new Date()\n        }\n    }\n\n    tick = () => {\n        this.setState({\n            currentTime: new Date()\n        });\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            this.tick();\n          }, 1000);\n    }\n\n    render() {\n        var ampm = this.state.getHours() >= 12 ? 'PM' : 'AM';\n        if (this.props.widget.value === \"12\")\n            return (<h1 style={{margin: '0', color: 'white', fontSize: this.props.widget.display.font + 'px'}}>{this.state.toLocaleTimeString().split(\":\")[0]}:{this.state.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>)\n        else\n            return (<h1 style={{margin: '0', color: 'white', fontSize: this.props.widget.display.font + 'px'}}>{this.state.toTimeString().split(\":\")[0]}:{this.state.toTimeString().split(\":\")[1]}</h1>)\n    }\n}\n\nexport default Time;"]},"metadata":{},"sourceType":"module"}