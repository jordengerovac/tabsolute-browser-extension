{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor() {\n    super();\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.state = {\n      photoBackground: \"true\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPhoto(); //console.log(store.getState())\n  }\n\n  render() {\n    const currentState = store.getState();\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        backgroundImage: 'url(' + \"currentState\" + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: '#202124'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          bottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: JSON.stringify(currentState.photo.item.urls.regular)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: this.state.photoBackground === \"true\",\n            onClick: this.togglePhotoBackground,\n            color: \"primary\",\n            name: \"photoBackground\",\n            inputProps: {\n              'aria-label': 'primary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  photo: state.photo.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","loadState","saveState","store","DashboardView","Component","constructor","togglePhotoBackground","toggle","state","photoBackground","setState","localStorage","setItem","JSON","stringify","componentDidMount","props","render","currentState","getState","theme","palette","primary","main","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","position","bottom","photo","item","urls","regular","mapStateToProps"],"mappings":"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","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\n\nclass DashboardView extends React.Component {\n    constructor() {\n        super();\n        this.state = ({\n            photoBackground: \"true\"\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchPhoto();\n        //console.log(store.getState())\n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n\n    render() {\n        const currentState = store.getState();\n        const theme = createMuiTheme({\n            palette: {\n              primary: {\n                main: '#4495F6'\n              }\n            }\n          });\n\n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + \"currentState\" + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n                <div style={{position: 'absolute', bottom: '0px'}}>\n                    <p>{JSON.stringify(currentState.photo.item.urls.regular)}</p>\n                    <MuiThemeProvider theme={theme}>\n                    <Switch\n                        checked={this.state.photoBackground === \"true\"}\n                        onClick={this.togglePhotoBackground}\n                        color=\"primary\"\n                        name=\"photoBackground\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                    </MuiThemeProvider>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    photo: state.photo.item\n})\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);"]},"metadata":{},"sourceType":"module"}