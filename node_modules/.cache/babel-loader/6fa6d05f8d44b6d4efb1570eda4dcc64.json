{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js\";\nimport '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      });\n    };\n\n    this.state = {\n      photoBackground: \"true\"\n    };\n  }\n\n  componentDidMount() {\n    if (!store.getState().photoDetails) {\n      this.props.fetchPhoto();\n    }\n  }\n\n  render() {\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        backgroundImage: 'url(' + this.props.photoDetails.photo.urls.regular + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: '#202124'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          bottom: '0px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: this.state.photoBackground === \"true\",\n            onClick: this.togglePhotoBackground,\n            color: \"primary\",\n            name: \"photoBackground\",\n            inputProps: {\n              'aria-label': 'primary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    photoDetails: state.photoDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(DashboardView); //export default DashboardView;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/DashboardView.js"],"names":["SettingsBar","WeatherWidget","Switch","MuiThemeProvider","createMuiTheme","React","connect","fetchPhoto","loadState","saveState","store","DashboardView","Component","constructor","props","togglePhotoBackground","toggle","state","photoBackground","setState","componentDidMount","getState","photoDetails","render","theme","palette","primary","main","backgroundImage","photo","urls","regular","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","position","bottom","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import '../App.css';\nimport SettingsBar from './SettingsBar';\nimport WeatherWidget from './widgets/WeatherWidget';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from '../actions/photoActions';\nimport { loadState, saveState } from '../actions/stateActions';\nimport store from '../store';\n\nclass DashboardView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            photoBackground: \"true\",\n        })\n    }\n\n    componentDidMount() {\n      if (!store.getState().photoDetails) {\n        this.props.fetchPhoto();\n      }\n    }\n\n    togglePhotoBackground = () => {\n        var toggle = \"\";\n        if (this.state.photoBackground === \"true\") {\n          toggle = \"false\";\n        }\n        else {\n          toggle = \"true\";\n        }\n        this.setState({\n          photoBackground: toggle\n        })\n      }\n\n    render() {\n      const theme = createMuiTheme({\n        palette: {\n          primary: {\n            main: '#4495F6'\n          }\n        }\n      });\n        return (\n            <div className=\"dashboard\" style={{backgroundImage: 'url(' + this.props.photoDetails.photo.urls.regular + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n              <p></p>\n              <div style={{position: 'absolute', bottom: '0px'}}>\n            <MuiThemeProvider theme={theme}>\n              <Switch\n                checked={this.state.photoBackground === \"true\"}\n                onClick={this.togglePhotoBackground}\n                color=\"primary\"\n                name=\"photoBackground\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n            </MuiThemeProvider>\n          </div>\n            </div>\n        )\n        \n    }\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    photoDetails: state.photoDetails\n  }\n}\n\nexport default connect(mapStateToProps, { fetchPhoto })(DashboardView);\n//export default DashboardView;"]},"metadata":{},"sourceType":"module"}