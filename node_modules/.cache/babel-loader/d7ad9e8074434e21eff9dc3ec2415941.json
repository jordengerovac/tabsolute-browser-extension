{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleView = () => {\n      var toggle = \"\";\n\n      if (this.state.viewType === \"dashboard\") {\n        toggle = \"tile\";\n      } else {\n        toggle = \"dashboard\";\n      }\n\n      this.setState({\n        viewType: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.toggleSettings = () => {\n      var toggle = \"\";\n\n      if (this.state.settingsVisible === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        settingsVisible: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.toggleDisplaySettings = e => {\n      if (e.target.id === \"linkWidget\") {\n        const newLinkWidget = this.state.linkWidget;\n\n        if (newLinkWidget.display.customizationVisible === \"true\") {\n          newLinkWidget.display.customizationVisible = \"false\";\n        } else {\n          newLinkWidget.display.customizationVisible = \"true\";\n        }\n\n        this.setState({\n          linkWidget: newLinkWidget\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      } else {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              if (widget.display.customizationVisible === \"false\") widget.display.customizationVisible = \"true\";else widget.display.customizationVisible = \"false\";\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.handleFontChange = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              widget.display.font = e.target.value;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.handleClockChange = e => {\n      this.setState({\n        widgets: this.state.widgets.map(widget => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value;\n          }\n\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        widgets: this.state.widgets.map(widget => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value;\n          }\n\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleDelete = e => {\n      const newWidgetsState = this.state.widgets.filter(widget => e.target.id !== widget.id);\n      this.setState({\n        widgets: newWidgetsState\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.addNewWidget = e => {\n      e.preventDefault();\n\n      if (e.target[0].value !== \"Select Widget\") {\n        const newWidget = {\n          id: uuid(),\n          type: e.target[0].value,\n          value: \"\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"20\",\n            location: \"center\"\n          }\n        };\n\n        if (e.target[0].value === \"Quote\") {\n          this.getRandomQuote(newWidget.id);\n        } else if (e.target[0].value === \"Scores\") {\n          this.getScores(newWidget.id);\n        }\n\n        this.setState({\n          widgets: [...this.state.widgets, newWidget]\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.addNewLinkTile = e => {\n      console.log('here');\n      e.preventDefault();\n      const newLinkTile = {\n        id: uuid(),\n        name: \"New\",\n        value: \"https://www.google.ca\",\n        icon: \"google\"\n      };\n      this.setState({\n        tiles: [...this.state.tiles, newLinkTile]\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.getScores = wid => {\n      fetch('https://nhl-score-api.herokuapp.com/api/scores/latest').then(res => res.json()).then(result => {\n        console.log(result);\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === wid) {\n              for (var i = 0; i < result.games.length; i++) {\n                widget.value += Object.keys(result.games[i].scores);\n              }\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      });\n    };\n\n    this.getRandomQuote = wid => {\n      fetch('https://type.fit/api/quotes').then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === wid) {\n              widget.value = result[random_num].text + \":@:\" + result[random_num].author;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      });\n    };\n\n    this.getWeatherStatus = (city, wid) => {\n      const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n      fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp_min: result.main.temp_min,\n            temp_max: result.main.temp_max,\n            clouds: result.weather[0].description\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n          this.setState({\n            widgets: this.state.widgets.map(widget => {\n              if (widget.id === wid) {\n                widget.value = city + \":@:\" + result.main.temp_min + \":@:\" + result.main.temp_max + \":@:\" + result.weather[0].description;\n              }\n\n              return widget;\n            })\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n        }\n      }, error => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleCityChange = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              widget.value = e.target.value;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n        this.getWeatherStatus(e.target.value, e.target.id);\n      }\n    };\n\n    this.tick = () => {\n      var current_time = new Date();\n      this.setState({\n        time: current_time\n      });\n\n      if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n        this.setState({\n          refresh: \"true\"\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.state = {\n      photo: \"\",\n      refresh: \"false\",\n      settingsVisible: \"false\",\n      viewType: \"dashboard\",\n      tileColumns: 4,\n      widgets: [{\n        id: uuid(),\n        type: \"Greeting\",\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      }, {\n        id: uuid(),\n        type: \"Time\",\n        value: \"12\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      }],\n      linkWidget: {\n        value: \"12\",\n        numLinks: 3,\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      },\n      tiles: [{\n        id: uuid(),\n        name: \"Twitter\",\n        value: \"https://www.twitter.com\",\n        icon: \"twitter\"\n      }, {\n        id: uuid(),\n        name: \"Facebook\",\n        value: \"https://www.facebook.com\",\n        icon: \"facebook\"\n      }, {\n        id: uuid(),\n        name: \"YouTube\",\n        value: \"https://www.youtube.com\",\n        icon: \"youtube\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    var getState = JSON.parse(localStorage.getItem(\"state\"));\n\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    }\n\n    this.setState(getState);\n    this.setState({\n      settingsVisible: \"false\"\n    }); // GET photo\n\n    if (getState.photo === \"\" || getState.refresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/896608/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY).then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          photo: result[random_num].urls.regular,\n          refresh: \"false\"\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(\"error\");\n      });\n    } // GET weather data\n    // this.getWeatherStatus(this.state.city);\n    // GET random quote and weather data\n\n\n    getState.widgets.map(widget => {\n      if (widget.type === \"Quote\") this.getRandomQuote(widget.id);else if (widget.type === \"Weather\") this.getWeatherStatus(widget.value, widget.id);else if (widget.type === \"Scores\") this.getScores(widget.id);\n    });\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    if (this.state.viewType === \"dashboard\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        style: {\n          backgroundImage: 'url(' + this.state.photo + ')',\n          width: '100vw',\n          height: '100vh',\n          backgroundSize: 'cover',\n          margin: '0',\n          padding: '0',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: '#202124'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SettingsBar, {\n          settingsVisible: this.state.settingsVisible,\n          toggleSettings: this.toggleSettings,\n          handleNameChange: this.handleNameChange,\n          handleCityChange: this.handleCityChange,\n          addNewWidget: this.addNewWidget,\n          widgets: this.state.widgets,\n          handleDelete: this.handleDelete,\n          handleClockChange: this.handleClockChange,\n          handleFontChange: this.handleFontChange,\n          toggleDisplaySettings: this.toggleDisplaySettings,\n          toggleView: this.toggleView,\n          viewType: this.state.viewType,\n          linkWidget: this.state.linkWidget,\n          tiles: this.state.tiles,\n          addNewLinkTile: this.addNewLinkTile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              color: 'white',\n              fontSize: '22px',\n              margin: '7px'\n            },\n            className: \"fas fa-cog\",\n            onClick: this.toggleSettings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right'\n            },\n            children: this.state.widgets.map(widget => {\n              if (widget.type === \"Weather\") return /*#__PURE__*/_jsxDEV(WeatherStatus, {\n                widget: widget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          style: {\n            textAlign: 'center'\n          },\n          children: this.state.widgets.map(widget => {\n            if (widget.type === \"Greeting\") {\n              if (widget.value !== \"\") return /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  margin: '0',\n                  color: 'white',\n                  fontSize: widget.display.font + 'px'\n                },\n                children: [\"Good \", greeting, \", \", widget.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 27\n              }, this);else return /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  margin: '0',\n                  color: 'white',\n                  fontSize: widget.display.font + 'px'\n                },\n                children: [\"Good \", greeting]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 27\n              }, this);\n            } else if (widget.type === \"Quote\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    color: 'white',\n                    fontSize: widget.display.font + 'px'\n                  },\n                  children: widget.value.split(\":@:\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    color: 'white',\n                    fontSize: widget.display.font + 'px'\n                  },\n                  children: [\"- \", widget.value.split(\":@:\")[1]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 132\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 25\n              }, this);\n            } else if (widget.type === \"Scores\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    color: 'white',\n                    fontSize: widget.display.font + 'px'\n                  },\n                  children: widget.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 25\n              }, this);\n            } else if (widget.type === \"Links\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: '#202124',\n                  width: '25%',\n                  textAlign: 'center',\n                  margin: 'auto',\n                  borderRadius: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-cog\",\n                  style: {\n                    color: 'white',\n                    marginTop: '15px',\n                    fontSize: '20px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 140\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    padding: '10px',\n                    color: 'white',\n                    fontSize: widget.display.font + 'px'\n                  },\n                  children: widget.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 232\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 25\n              }, this);\n            } else if (widget.type === \"Time\") {\n              if (widget.value === \"12\") return /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  margin: '0',\n                  color: 'white',\n                  fontSize: widget.display.font + 'px'\n                },\n                children: [current_time.toLocaleTimeString().split(\":\")[0], \":\", current_time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 27\n              }, this);else return /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  margin: '0',\n                  color: 'white',\n                  fontSize: widget.display.font + 'px'\n                },\n                children: [current_time.toTimeString().split(\":\")[0], \":\", current_time.toTimeString().split(\":\")[1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 27\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tiles\",\n        style: {\n          backgroundImage: 'url(' + this.state.photo + ')',\n          width: '100vw',\n          height: '100vh',\n          backgroundSize: 'cover',\n          margin: '0',\n          padding: '0',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: '#30363D'\n        },\n        children: [/*#__PURE__*/_jsxDEV(SettingsBar, {\n          settingsVisible: this.state.settingsVisible,\n          toggleSettings: this.toggleSettings,\n          handleNameChange: this.handleNameChange,\n          handleCityChange: this.handleCityChange,\n          addNewWidget: this.addNewWidget,\n          widgets: this.state.widgets,\n          handleDelete: this.handleDelete,\n          handleClockChange: this.handleClockChange,\n          handleFontChange: this.handleFontChange,\n          toggleDisplaySettings: this.toggleDisplaySettings,\n          toggleView: this.toggleView,\n          viewType: this.state.viewType,\n          linkWidget: this.state.linkWidget,\n          tiles: this.state.tiles,\n          addNewLinkTile: this.addNewLinkTile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              color: 'white',\n              fontSize: '22px',\n              margin: '7px'\n            },\n            className: \"fas fa-cog\",\n            onClick: this.toggleSettings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          style: {\n            textAlign: 'center',\n            display: 'flex'\n          },\n          children: this.state.tiles.map((tile, key) => {\n            if (key === this.state.tileColumns - 1) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    textDecoration: 'none',\n                    color: ' white',\n                    margin: '15px'\n                  },\n                  href: tile.value,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: '#202124',\n                      height: '120px',\n                      width: '200px',\n                      borderRadius: '10px',\n                      padding: '10px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      style: {\n                        fontWeight: 'lighter'\n                      },\n                      children: tile.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      style: {\n                        color: 'white',\n                        fontSize: '70px',\n                        marginTop: '20px'\n                      },\n                      className: \"fab fa-\" + tile.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  textDecoration: 'none',\n                  color: ' white',\n                  margin: '15px'\n                },\n                href: tile.value,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: '#202124',\n                    height: '120px',\n                    width: '200px',\n                    borderRadius: '10px',\n                    padding: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontWeight: 'lighter'\n                    },\n                    children: tile.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    style: {\n                      color: 'white',\n                      fontSize: '70px',\n                      marginTop: '20px'\n                    },\n                    className: \"fab fa-\" + tile.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                textDecoration: 'none',\n                color: ' white',\n                margin: '15px'\n              },\n              href: tile.value,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: '#202124',\n                  height: '120px',\n                  width: '200px',\n                  borderRadius: '10px',\n                  padding: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontWeight: 'lighter'\n                  },\n                  children: tile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  style: {\n                    color: 'white',\n                    fontSize: '70px',\n                    marginTop: '20px'\n                  },\n                  className: \"fab fa-\" + tile.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js"],"names":["React","SettingsBar","WeatherStatus","v4","uuid","App","Component","constructor","toggleView","toggle","state","viewType","setState","localStorage","setItem","JSON","stringify","toggleSettings","settingsVisible","toggleDisplaySettings","e","target","id","newLinkWidget","linkWidget","display","customizationVisible","widgets","map","widget","handleFontChange","key","font","value","handleClockChange","handleNameChange","handleDelete","newWidgetsState","filter","addNewWidget","preventDefault","newWidget","type","location","getRandomQuote","getScores","addNewLinkTile","console","log","newLinkTile","name","icon","tiles","wid","fetch","then","res","json","result","i","games","length","Object","keys","scores","random_num","Math","floor","random","text","author","getWeatherStatus","city","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","hasOwnProperty","temp_min","main","temp_max","clouds","weather","description","error","handleCityChange","tick","current_time","Date","time","getMinutes","getSeconds","refresh","photo","tileColumns","numLinks","componentDidMount","UNSPLASH_API_KEY","REACT_APP_UNSPLASH_API_KEY","getState","parse","getItem","urls","regular","setInterval","render","greeting","ampm","getHours","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","backgroundColor","color","fontSize","float","textAlign","split","borderRadius","marginTop","toLocaleTimeString","toTimeString","tile","textDecoration","fontWeight"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherStatus from './components/WeatherStatus';\nimport { v4 as uuid } from 'uuid';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      photo: \"\",\n      refresh: \"false\",\n      settingsVisible: \"false\",\n      viewType: \"dashboard\",\n      tileColumns: 4,\n      widgets: [\n        {\n          id: uuid(),\n          type: \"Greeting\",\n          value: \"\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          }\n        },\n        {\n          id: uuid(),\n          type: \"Time\",\n          value: \"12\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          },\n        }\n      ],\n      linkWidget: {\n        value: \"12\",\n        numLinks: 3,\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        },\n      },\n      tiles: [\n        {\n          id: uuid(),\n          name: \"Twitter\",\n          value: \"https://www.twitter.com\",\n          icon: \"twitter\"\n        },\n        {\n          id: uuid(),\n          name: \"Facebook\",\n          value: \"https://www.facebook.com\",\n          icon: \"facebook\"\n        },\n        {\n          id: uuid(),\n          name: \"YouTube\",\n          value: \"https://www.youtube.com\",\n          icon: \"youtube\"\n        }\n      ]\n    };\n  }\n\n  toggleView = () => {\n    var toggle = \"\";\n    if (this.state.viewType === \"dashboard\") {\n      toggle = \"tile\";\n    }\n    else {\n      toggle = \"dashboard\";\n    }\n    this.setState({\n      viewType: toggle\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  toggleSettings = () => {\n    var toggle = \"\";\n    if (this.state.settingsVisible === \"true\") {\n      toggle = \"false\";\n    }\n    else {\n      toggle = \"true\";\n    }\n    this.setState({\n      settingsVisible: toggle\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  toggleDisplaySettings = (e) => {\n    if (e.target.id === \"linkWidget\") {\n      const newLinkWidget = this.state.linkWidget;\n      if (newLinkWidget.display.customizationVisible === \"true\") {\n        newLinkWidget.display.customizationVisible = \"false\"\n      }\n      else {\n        newLinkWidget.display.customizationVisible = \"true\"\n      }\n      this.setState({\n        linkWidget: newLinkWidget\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n    else {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            if (widget.display.customizationVisible === \"false\")\n              widget.display.customizationVisible = \"true\";\n            else\n              widget.display.customizationVisible = \"false\";\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    }\n  }\n\n  handleFontChange = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            widget.display.font = e.target.value\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n  }\n\n  handleClockChange = (e) => {\n    this.setState({\n      widgets: this.state.widgets.map((widget) => {\n        if (widget.id === e.target.id) {\n          widget.value = e.target.value\n        }\n        return widget;\n      })\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      widgets: this.state.widgets.map((widget) => {\n        if (widget.id === e.target.id) {\n          widget.value = e.target.value\n        }\n        return widget;\n      })\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  handleDelete = (e) => {\n    const newWidgetsState = this.state.widgets.filter(widget => e.target.id !== widget.id);\n    this.setState({\n      widgets: newWidgetsState\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  addNewWidget = (e) => {\n    e.preventDefault();\n    if (e.target[0].value !== \"Select Widget\") {\n      const newWidget = {\n        id: uuid(),\n        type: e.target[0].value,\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"20\",\n          location: \"center\"\n        }\n      }\n\n      if (e.target[0].value === \"Quote\") {\n        this.getRandomQuote(newWidget.id);\n      }\n      else if (e.target[0].value === \"Scores\") {\n        this.getScores(newWidget.id);\n      }\n\n      this.setState({\n        widgets: [...this.state.widgets, newWidget]\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n  }\n\n  addNewLinkTile = (e) => {\n    console.log('here')\n    e.preventDefault();\n    const newLinkTile = {\n      id: uuid(),\n      name: \"New\",\n      value: \"https://www.google.ca\",\n      icon: \"google\"\n    }\n\n    this.setState({\n      tiles: [...this.state.tiles, newLinkTile]\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n  \n\n  getScores = (wid) => {\n    fetch('https://nhl-score-api.herokuapp.com/api/scores/latest')\n      .then(res => res.json())\n      .then(\n      (result) => {\n        console.log(result)\n        this.setState({\n          widgets: this.state.widgets.map((widget) => {\n            if (widget.id === wid) {\n              for (var i = 0; i < result.games.length; i++) {\n                widget.value += Object.keys(result.games[i].scores);\n              }\n            }\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n    )\n  }\n\n  getRandomQuote = (wid) => {\n    fetch('https://type.fit/api/quotes')\n      .then(res => res.json())\n      .then(\n      (result) => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          widgets: this.state.widgets.map((widget) => {\n            if (widget.id === wid) {\n              widget.value = result[random_num].text + \":@:\" + result[random_num].author\n            }\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n    )\n  }\n\n  getWeatherStatus = (city, wid) => {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY)\n      .then(res => res.json())\n      .then(\n      (result) => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp_min: result.main.temp_min,\n            temp_max: result.main.temp_max,\n            clouds: result.weather[0].description\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n\n          this.setState({\n            widgets: this.state.widgets.map((widget) => {\n              if (widget.id === wid) {\n                widget.value = city + \":@:\" + result.main.temp_min + \":@:\" + result.main.temp_max + \":@:\" + result.weather[0].description\n              }\n              return widget;\n            })\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n        }\n      },\n      (error) => {\n          console.log(\"error\")\n      }\n    )\n}\n\n  handleCityChange = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      this.getWeatherStatus(e.target.value, e.target.id);\n    }\n  }\n\n  tick = () => {\n    var current_time = new Date();\n    this.setState({\n      time: current_time\n    });\n\n    if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n      this.setState({\n        refresh: \"true\"\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    }\n  }\n\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    var getState = JSON.parse(localStorage.getItem(\"state\"));\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    }\n    this.setState(getState);\n    this.setState({\n      settingsVisible: \"false\"\n    });\n\n    // GET photo\n    if (getState.photo === \"\" || getState.refresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/896608/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular,\n              refresh: \"false\"\n            }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n    }\n\n    // GET weather data\n    // this.getWeatherStatus(this.state.city);\n\n    // GET random quote and weather data\n    getState.widgets.map((widget) => {\n      if (widget.type === \"Quote\")\n        this.getRandomQuote(widget.id);\n      else if (widget.type === \"Weather\")\n        this.getWeatherStatus(widget.value, widget.id);\n      else if (widget.type === \"Scores\")\n        this.getScores(widget.id);\n    })\n\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render(){\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    }\n    else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    }\n    else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\"\n    }\n    else {\n      greeting = \"morning\"\n    }\n    if (this.state.viewType === \"dashboard\") {\n      return (\n        <div className=\"dashboard\" style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#202124'}}>\n          <SettingsBar settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} handleCityChange={this.handleCityChange} addNewWidget={this.addNewWidget} widgets={this.state.widgets} handleDelete={this.handleDelete} handleClockChange={this.handleClockChange} handleFontChange={this.handleFontChange} toggleDisplaySettings={this.toggleDisplaySettings} toggleView={this.toggleView} viewType={this.state.viewType} linkWidget={this.state.linkWidget} tiles={this.state.tiles} addNewLinkTile={this.addNewLinkTile}/>\n          <div className=\"settings\">\n            <i style={{color: 'white', fontSize: '22px', margin: '7px'}} className=\"fas fa-cog\" onClick={this.toggleSettings}></i>\n            <div style={{float:'right'}}>\n              {this.state.widgets.map((widget) => {\n                if (widget.type === \"Weather\") \n                  return (<WeatherStatus widget={widget} />)\n              })}\n            </div>\n          </div>\n            <div className=\"centered\" style={{textAlign: 'center'}}>\n            {this.state.widgets.map((widget) => {\n              if (widget.type === \"Greeting\") {\n                if (widget.value !== \"\") \n                  return (<h3 style={{margin: '0', color: 'white', fontSize: widget.display.font + 'px'}}>Good {greeting}, {widget.value}</h3>)\n                \n                else \n                  return (<h3 style={{margin: '0', color: 'white', fontSize: widget.display.font + 'px'}}>Good {greeting}</h3>)\n                \n              }\n              else if (widget.type === \"Quote\") {\n                return (<div><h4 style={{color: 'white', fontSize: widget.display.font + 'px'}}>{widget.value.split(\":@:\")[0]}</h4><h4 style={{color: 'white', fontSize: widget.display.font + 'px'}}>- {widget.value.split(\":@:\")[1]}</h4></div>)\n              }\n              else if (widget.type === \"Scores\") {\n                return (<div><h4 style={{color: 'white', fontSize: widget.display.font + 'px'}}>{widget.value}</h4></div>)\n              }\n              else if (widget.type === \"Links\") {\n                return (<div style={{backgroundColor: '#202124', width: '25%', textAlign: 'center', margin: 'auto', borderRadius: '10px'}}><i className=\"fas fa-cog\" style={{color: 'white', marginTop: '15px', fontSize: '20px'}}></i><h4 style={{padding: '10px', color: 'white', fontSize: widget.display.font + 'px'}}>{widget.value}</h4></div>)\n              }\n              else if (widget.type === \"Time\") {\n                if (widget.value === \"12\")\n                  return (<h1 style={{margin: '0', color: 'white', fontSize: widget.display.font + 'px'}}>{current_time.toLocaleTimeString().split(\":\")[0]}:{current_time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>)\n                else\n                  return (<h1 style={{margin: '0', color: 'white', fontSize: widget.display.font + 'px'}}>{current_time.toTimeString().split(\":\")[0]}:{current_time.toTimeString().split(\":\")[1]}</h1>)\n              }\n              }\n            )}\n          </div>\n        </div>\n      )\n    }\n      else {\n        return(\n          <div className=\"tiles\" style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat', backgroundColor: '#30363D'}}>\n            <SettingsBar settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} handleCityChange={this.handleCityChange} addNewWidget={this.addNewWidget} widgets={this.state.widgets} handleDelete={this.handleDelete} handleClockChange={this.handleClockChange} handleFontChange={this.handleFontChange} toggleDisplaySettings={this.toggleDisplaySettings} toggleView={this.toggleView} viewType={this.state.viewType} linkWidget={this.state.linkWidget} tiles={this.state.tiles} addNewLinkTile={this.addNewLinkTile} />\n            <div className=\"settings\">\n              <i style={{color: 'white', fontSize: '22px', margin: '7px'}} className=\"fas fa-cog\" onClick={this.toggleSettings}></i>\n            </div>\n              <div className=\"centered\" style={{textAlign: 'center', display: 'flex'}}>\n                {this.state.tiles.map((tile, key) => {\n                  if (key === this.state.tileColumns - 1) {\n                    return (\n                      <div>\n                      <br></br>\n                      <a style={{textDecoration: 'none', color:' white', margin: '15px'}} href={tile.value}>\n                          <div style={{backgroundColor: '#202124', height: '120px', width: '200px', borderRadius: '10px', padding: '10px'}}>\n                            <h4 style={{fontWeight: 'lighter'}}>{tile.name}</h4>\n                            <i style={{color: 'white', fontSize: '70px', marginTop: '20px'}} className={\"fab fa-\" + tile.icon}></i>\n                          </div>\n                        </a>\n                        </div>\n                      )\n                  }\n                  else {\n                    return (\n                      <a style={{textDecoration: 'none', color:' white', margin: '15px'}} href={tile.value}>\n                        <div style={{backgroundColor: '#202124', height: '120px', width: '200px', borderRadius: '10px', padding: '10px'}}>\n                          <h4 style={{fontWeight: 'lighter'}}>{tile.name}</h4>\n                          <i style={{color: 'white', fontSize: '70px', marginTop: '20px'}} className={\"fab fa-\" + tile.icon}></i>\n                        </div>\n                      </a>\n                    )\n                  }\n                  return (\n                    <a style={{textDecoration: 'none', color:' white', margin: '15px'}} href={tile.value}>\n                      <div style={{backgroundColor: '#202124', height: '120px', width: '200px', borderRadius: '10px', padding: '10px'}}>\n                        <h4 style={{fontWeight: 'lighter'}}>{tile.name}</h4>\n                        <i style={{color: 'white', fontSize: '70px', marginTop: '20px'}} className={\"fab fa-\" + tile.icon}></i>\n                      </div>\n                    </a>\n                  )\n                })}\n              </div>\n          </div>\n        )\n      }\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}