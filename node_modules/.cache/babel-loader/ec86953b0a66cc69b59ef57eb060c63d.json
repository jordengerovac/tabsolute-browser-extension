{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleSettings = () => {\n      this.setState({\n        settingsVisible: !this.state.settingsVisible\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n      localStorage.setItem(\"name\", event.target.value);\n    };\n\n    this.tick = () => {\n      this.setState({\n        time: new Date()\n      });\n\n      if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n        localStorage.setItem(\"refresh\", \"true\");\n      }\n    };\n\n    this.counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({\n        count: this.state.count + 1\n      });\n      localStorage.setItem(\"count\", this.state.count + 1);\n    };\n\n    this.getWeatherStatus = () => {\n      fetch('https://api.openweathermap.org/data/2.5/weather?q=' + 'toronto' + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n        this.setState({\n          feelsLike: result.main.feels_like,\n          temp: result.main.temp,\n          clouds: result.weather[0].description\n        });\n        console.log(result);\n      }, error => {\n        console.log(\"error\");\n      });\n    };\n\n    this.state = {\n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      widgets: [{\n        type: \"name\",\n        value: \"\"\n      }, {\n        type: \"weather\",\n        value: \"mississauga\"\n      }, {\n        type: \"scores\",\n        value: \"nba\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    }); // GET photo\n\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY).then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          photo: result[random_num].urls.regular\n        });\n        localStorage.setItem(\"photo\", result[random_num].urls.regular);\n        localStorage.setItem(\"refresh\", \"false\");\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(\"error\");\n      });\n    } // GET weather data\n\n\n    this.getWeatherStatus();\n    const interval = setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (this.state.time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (this.state.time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (this.state.time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: 'url(' + this.state.photo + ')',\n        width: '100vw',\n        height: '100vh',\n        backgroundSize: 'cover',\n        margin: '0',\n        padding: '0',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SettingsBar, {\n        settingsVisible: this.state.settingsVisible,\n        toggleSettings: this.toggleSettings,\n        handleChange: this.handleChange,\n        name: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: 'white',\n            fontSize: '22px',\n            margin: '7px'\n          },\n          className: \"fas fa-cog\",\n          onClick: this.toggleSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [\"Good \", greeting, \", \", this.state.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: '0',\n            color: 'white'\n          },\n          children: [this.state.time.toLocaleTimeString().split(\":\")[0], \":\", this.state.time.toLocaleTimeString().split(\":\")[1], \" \", ampm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp: \", this.state.temp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels Like: \", this.state.feelsLike]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Cloud Coverage: \", this.state.clouds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js"],"names":["React","useState","useEffect","SettingsBar","App","Component","constructor","toggleSettings","setState","settingsVisible","state","handleChange","event","name","target","value","localStorage","setItem","tick","time","Date","getMinutes","getSeconds","counter","count","getWeatherStatus","fetch","WEATHER_API_KEY","then","res","json","result","feelsLike","main","feels_like","temp","clouds","weather","description","console","log","error","photo","refresh","widgets","type","componentDidMount","UNSPLASH_API_KEY","process","env","REACT_APP_UNSPLASH_API_KEY","REACT_APP_WEATHER_API_KEY","parsedCount","Number","getItem","getPhoto","String","getRefresh","getName","random_num","Math","floor","random","length","urls","regular","interval","setInterval","render","greeting","ampm","getHours","backgroundImage","width","height","backgroundSize","margin","padding","backgroundRepeat","color","fontSize","textAlign","toLocaleTimeString","split"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport SettingsBar from './components/SettingsBar';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {      \n      count: 0,\n      photo: \"\",\n      time: new Date(),\n      refresh: \"false\",\n      settingsVisible: false,\n      name: \"\",\n      feelsLike: \"\",\n      temp: \"\",\n      clouds: \"\",\n      widgets: [\n        {\n          type: \"name\",\n          value: \"\", \n        },\n        {\n          type: \"weather\",\n          value: \"mississauga\"\n        },\n        {\n          type: \"scores\",\n          value: \"nba\"\n        }\n      ]\n    };\n  }\n\n  toggleSettings = () => {\n    this.setState({\n      settingsVisible: !this.state.settingsVisible\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      name: event.target.value\n    });\n    localStorage.setItem(\"name\", event.target.value);\n  }\n\n  tick = () => {\n    this.setState({\n      time: new Date()\n    });\n    if (this.state.time.getMinutes() % 5 === 0 && this.state.time.getSeconds() === 0) {\n      localStorage.setItem(\"refresh\", \"true\");\n    }\n  }\n\n  counter = () => {\n      //const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n      this.setState({count: this.state.count + 1});\n      localStorage.setItem(\"count\", this.state.count + 1);\n  }\n\n  getWeatherStatus = () => {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + 'toronto' + '&units=metric&appid=' + WEATHER_API_KEY)\n\t\t  .then(res => res.json())\n      .then(\n        (result) => {\n\t\t\t    this.setState({ \n            feelsLike: result.main.feels_like,\n            temp: result.main.temp,\n            clouds: result.weather[0].description\n          });\n          console.log(result);\n\t\t  },\n      (error) => {\n        console.log(\"error\")\n      }\n    )\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    const parsedCount = Number(localStorage.getItem(\"count\") || 0);\n    const getPhoto = String(localStorage.getItem(\"photo\") || \"\");\n    const getRefresh = String(localStorage.getItem(\"refresh\") || \"false\");\n    const getName = String(localStorage.getItem(\"name\") || \"\");\n\n    this.setState({\n      count: parsedCount,\n      photo: getPhoto,\n      name: getName\n    })\n\n    // GET photo\n    if (getPhoto === \"\" || getRefresh === \"true\") {\n      fetch(\"https://api.unsplash.com/collections/764604/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular\n            });\n            localStorage.setItem(\"photo\", result[random_num].urls.regular);\n            localStorage.setItem(\"refresh\", \"false\");\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n    }\n\n    // GET weather data\n    this.getWeatherStatus();\n\n      const interval = setInterval(() => {\n        this.tick();\n      }, 1000);\n  }\n\n  render(){\n    var greeting = \"\";\n    var ampm = this.state.time.getHours() >= 12 ? 'PM' : 'AM';\n    if (this.state.time.getHours() >= 21) {\n      greeting = \"night\";\n    }\n    else if (this.state.time.getHours() >= 18) {\n      greeting = \"evening\";\n    }\n    else if (this.state.time.getHours() >= 12) {\n      greeting = \"afternoon\"\n    }\n    else {\n      greeting = \"morning\"\n    }\n\n    return (\n      <div style={{backgroundImage: 'url(' + this.state.photo + ')', width: '100vw', height: '100vh', backgroundSize: 'cover', margin: '0', padding: '0', backgroundRepeat: 'no-repeat'}}>\n        <SettingsBar settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleChange={this.handleChange} name={this.state.name}/>\n        <div className=\"settings\">\n          <i style={{color: 'white', fontSize: '22px', margin: '7px'}} className=\"fas fa-cog\" onClick={this.toggleSettings}></i>\n        </div>\n          <div className=\"centered\" style={{textAlign: 'center'}}>\n            <h3 style={{margin: '0', color: 'white'}}>Good {greeting}, {this.state.name}</h3>\n            <h1 style={{margin: '0', color: 'white'}}>{this.state.time.toLocaleTimeString().split(\":\")[0]}:{this.state.time.toLocaleTimeString().split(\":\")[1]} {ampm}</h1>\n            <p>Temp: {this.state.temp}</p>\n            <p>Feels Like: {this.state.feelsLike}</p>\n            <p>Cloud Coverage: {this.state.clouds}</p>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}