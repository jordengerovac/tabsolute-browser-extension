{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js\";\nimport '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quote extends React.Component {\n  constructor() {\n    super();\n\n    this.getRandomQuote = () => {\n      fetch('https://type.fit/api/quotes').then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        var text = result[random_num].text;\n        var author = result[random_num].author;\n        if (author === null) author = \"Unknown\";\n        this.setState({\n          quoteText: text,\n          quoteAuthor: author\n        });\n      });\n    };\n\n    this.state = {\n      quoteText: \"\",\n      quoteAuthor: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getRandomQuote();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '20px'\n        },\n        children: this.state.quoteText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '20px'\n        },\n        children: [\"- \", this.state.quoteAuthor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    widgetDetails: state.widgetDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateWidget\n})(Quote);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js"],"names":["React","updateWidget","connect","Quote","Component","constructor","getRandomQuote","fetch","then","res","json","result","random_num","Math","floor","random","length","text","author","setState","quoteText","quoteAuthor","state","componentDidMount","render","fontSize","mapStateToProps","ownProps","widgetDetails"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,cARc,GAQG,MAAM;AACnBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGGG,MAAD,IAAY;AACV,YAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAjB;AACA,YAAIC,IAAI,GAAGN,MAAM,CAACC,UAAD,CAAN,CAAmBK,IAA9B;AACA,YAAIC,MAAM,GAAGP,MAAM,CAACC,UAAD,CAAN,CAAmBM,MAAhC;AACA,YAAIA,MAAM,KAAK,IAAf,EACIA,MAAM,GAAG,SAAT;AACJ,aAAKC,QAAL,CAAc;AACVC,UAAAA,SAAS,EAAEH,IADD;AAEVI,UAAAA,WAAW,EAAEH;AAFH,SAAd;AAIH,OAbD;AAcH,KAvBa;;AAEV,SAAKI,KAAL,GAAa;AACTF,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAmBDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKjB,cAAL;AACH;;AAGDkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA,kBAA+B,KAAKH,KAAL,CAAWF;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,KAAK,EAAE;AAACK,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA,yBAAiC,KAAKH,KAAL,CAAWD,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAtC+B;;AAyCpC,SAASK,eAAT,CAAyBJ,KAAzB,EAAgCK,QAAhC,EAA0C;AACtC,SAAO;AACLC,IAAAA,aAAa,EAAEN,KAAK,CAACM;AADhB,GAAP;AAGH;;AAED,eAAe1B,OAAO,CAACwB,eAAD,EAAkB;AAAEzB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,KAA3C,CAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\n\nclass Quote extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            quoteText: \"\",\n            quoteAuthor: \"\"\n        }\n    }\n    \n    getRandomQuote = () => {\n        fetch('https://type.fit/api/quotes')\n          .then(res => res.json())\n          .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            var text = result[random_num].text;\n            var author = result[random_num].author\n            if (author === null)\n                author = \"Unknown\";\n            this.setState({\n                quoteText: text,\n                quoteAuthor: author\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getRandomQuote();\n    }\n      \n\n    render() {\n        return (\n            <div>\n                <p style={{fontSize: '20px'}}>{this.state.quoteText}</p>\n                <p style={{fontSize: '20px'}}>- {this.state.quoteAuthor}</p>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n      widgetDetails: state.widgetDetails\n    }\n}\n\nexport default connect(mapStateToProps, { updateWidget })(Quote);"]},"metadata":{},"sourceType":"module"}