{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js\";\nimport '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quote extends React.Component {\n  /*\n  getRandomQuote = () => {\n      fetch('https://type.fit/api/quotes')\n        .then(res => res.json())\n        .then(\n        (result) => {\n          var random_num = Math.floor(Math.random() * result.length);\n          this.setState({\n            widgets: this.state.widgets.map((widget) => {\n              if (widget.id === wid) {\n                widget.value = result[random_num].text + \":@:\" + result[random_num].author\n              }\n              return widget;\n            })\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n        }\n      )\n    }\n    */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '80px'\n        },\n        children: \"Here is a Quote...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    widgetDetails: state.widgetDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateWidget\n})(Quote);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/Quote.js"],"names":["React","updateWidget","connect","Quote","Component","render","fontSize","mapStateToProps","state","ownProps","widgetDetails"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA3B+B;;AA8BpC,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,SAAO;AACLC,IAAAA,aAAa,EAAEF,KAAK,CAACE;AADhB,GAAP;AAGH;;AAED,eAAeR,OAAO,CAACK,eAAD,EAAkB;AAAEN,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,KAA3C,CAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport { updateWidget } from '../actions/widgetActions';\nimport { connect } from 'react-redux';\n\nclass Quote extends React.Component {\n    /*\n    getRandomQuote = () => {\n        fetch('https://type.fit/api/quotes')\n          .then(res => res.json())\n          .then(\n          (result) => {\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              widgets: this.state.widgets.map((widget) => {\n                if (widget.id === wid) {\n                  widget.value = result[random_num].text + \":@:\" + result[random_num].author\n                }\n                return widget;\n              })\n            }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n          }\n        )\n      }\n      */\n\n    render() {\n        return (\n            <div>\n                <p style={{fontSize: '80px'}}>Here is a Quote...</p>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n      widgetDetails: state.widgetDetails\n    }\n}\n\nexport default connect(mapStateToProps, { updateWidget })(Quote);"]},"metadata":{},"sourceType":"module"}