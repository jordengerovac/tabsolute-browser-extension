{"ast":null,"code":"import { FETCH_PHOTO, TOGGLE_PHOTO, SET_DEFAULT_PHOTO } from './types';\nimport store from '../store';\nvar last_random_num = -1;\nexport const fetchPhoto = () => dispatch => {\n  const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n  var random_page_num = Math.floor(Math.random() * 100);\n\n  while (random_page_num === last_random_num) {\n    random_page_num = Math.floor(Math.random() * 100);\n    console.log('recalculating');\n  }\n\n  console.log(last_random_num);\n  last_random_num = random_page_num;\n  console.log(random_page_num);\n  console.log(store.getState());\n  fetch(\"https://api.unsplash.com/collections/19428159/photos/?page= \" + random_page_num + \"&per_page=1&client_id=\" + UNSPLASH_API_KEY).then(res => res.json()).then(result => {\n    var photo = result[0];\n    dispatch({\n      type: FETCH_PHOTO,\n      payload: photo\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const togglePhoto = event => dispatch => {\n  dispatch({\n    type: TOGGLE_PHOTO,\n    payload: event\n  });\n};\nexport const setDefaultPhoto = () => dispatch => {\n  dispatch({\n    type: SET_DEFAULT_PHOTO\n  });\n};","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/actions/photoActions.js"],"names":["FETCH_PHOTO","TOGGLE_PHOTO","SET_DEFAULT_PHOTO","store","last_random_num","fetchPhoto","dispatch","UNSPLASH_API_KEY","process","env","REACT_APP_UNSPLASH_API_KEY","random_page_num","Math","floor","random","console","log","getState","fetch","then","res","json","result","photo","type","payload","catch","error","togglePhoto","event","setDefaultPhoto"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,iBAApC,QAA6D,SAA7D;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAIC,eAAe,GAAG,CAAC,CAAvB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1C,QAAMC,gBAAgB,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,0BAA2B,EAAnE;AACA,MAAIC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAtB;;AACA,SAAOH,eAAe,KAAKP,eAA3B,EAA4C;AAC1CO,IAAAA,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,eAAZ;AACAA,EAAAA,eAAe,GAAGO,eAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,QAAN,EAAZ;AACAC,EAAAA,KAAK,CAAC,iEAAiEP,eAAjE,GAAmF,wBAAnF,GAA8GJ,gBAA/G,CAAL,CACCY,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,QAAIC,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAlB;AACAhB,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAExB,WADC;AAEPyB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIH,GATD,EAUCG,KAVD,CAUO,UAASC,KAAT,EAAgB;AACrBZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,GAZD;AAaD,CAxBM;AA0BP,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAWvB,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAEvB,YADC;AAEPwB,IAAAA,OAAO,EAAEI;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,eAAe,GAAG,MAAMxB,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAEtB;AADC,GAAD,CAAR;AAGD,CAJM","sourcesContent":["import { FETCH_PHOTO, TOGGLE_PHOTO, SET_DEFAULT_PHOTO } from './types';\nimport store from '../store';\n\nvar last_random_num = -1;\n\nexport const fetchPhoto = () => dispatch => {\n  const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n  var random_page_num = Math.floor(Math.random() * 100);\n  while (random_page_num === last_random_num) {\n    random_page_num = Math.floor(Math.random() * 100);\n    console.log('recalculating')\n  }\n  console.log(last_random_num);\n  last_random_num = random_page_num;\n  console.log(random_page_num);\n  console.log(store.getState())\n  fetch(\"https://api.unsplash.com/collections/19428159/photos/?page= \" + random_page_num + \"&per_page=1&client_id=\" + UNSPLASH_API_KEY)\n  .then(res => res.json())\n  .then(\n    (result) => {\n      var photo = result[0];\n      dispatch({\n        type: FETCH_PHOTO,\n        payload: photo\n    });\n  })\n  .catch(function(error) {\n    console.log(error);\n  });\n}\n\nexport const togglePhoto = (event) => dispatch => {\n  dispatch({\n    type: TOGGLE_PHOTO,\n    payload: event\n  })\n}\n\nexport const setDefaultPhoto = () => dispatch => {\n  dispatch({\n    type: SET_DEFAULT_PHOTO\n  })\n}\n"]},"metadata":{},"sourceType":"module"}