{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/View.js\";\nimport '../App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardView from './DashboardView';\nimport LinkTileView from './LinkTileView';\nimport { fetchPhoto } from '../actions/photoActions';\nimport Audio from './Audio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass View extends React.Component {\n  componentWillMount() {\n    this.props.fetchPhoto();\n    const imagesToBePreloaded = [this.props.photoDetails.currentPhoto.urls.regular];\n    imagesToBePreloaded.forEach(image => {\n      new Image().src = image;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.widgetDetails.widgets.map(widget => {\n        if (widget.type === \"Audio\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Audio, {\n              widget: widget\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 22\n          }, this);\n        }\n      }), this.props.viewDetails.view === \"dashboard\" ? /*#__PURE__*/_jsxDEV(DashboardView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 58\n      }, this) : /*#__PURE__*/_jsxDEV(LinkTileView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    viewDetails: state.viewDetails,\n    photoDetails: state.photoDetails,\n    widgetDetails: state.widgetDetails\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchPhoto\n})(View);","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/redux-tabsolute/src/components/View.js"],"names":["React","connect","DashboardView","LinkTileView","fetchPhoto","Audio","View","Component","componentWillMount","props","imagesToBePreloaded","photoDetails","currentPhoto","urls","regular","forEach","image","Image","src","render","widgetDetails","widgets","map","widget","type","viewDetails","view","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWL,UAAX;AACA,UAAMM,mBAAmB,GAAG,CAAC,KAAKD,KAAL,CAAWE,YAAX,CAAwBC,YAAxB,CAAqCC,IAArC,CAA0CC,OAA3C,CAA5B;AACAJ,IAAAA,mBAAmB,CAACK,OAApB,CAA4BC,KAAK,IAAI;AAAE,UAAIC,KAAJ,GAAYC,GAAZ,GAAkBF,KAAlB;AAAyB,KAAhE;AACD;;AAEDG,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAA,iBACG,KAAKV,KAAL,CAAWW,aAAX,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAChD,YAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,8BAAO;AAAA,mCAAK,QAAC,KAAD;AAAO,cAAA,MAAM,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAJA,CADH,EAMG,KAAKd,KAAL,CAAWgB,WAAX,CAAuBC,IAAvB,KAAgC,WAAhC,gBAA8C,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAA9C,gBAAkE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cANrE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAlB8B;;AAqBjC,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,SAAO;AACLJ,IAAAA,WAAW,EAAEG,KAAK,CAACH,WADd;AAELd,IAAAA,YAAY,EAAEiB,KAAK,CAACjB,YAFf;AAGLS,IAAAA,aAAa,EAAEQ,KAAK,CAACR;AAHhB,GAAP;AAKD;;AAEH,eAAenB,OAAO,CAAC0B,eAAD,EAAkB;AAAEvB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,IAAzC,CAAf","sourcesContent":["import '../App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport DashboardView from './DashboardView';\nimport LinkTileView from './LinkTileView';\nimport { fetchPhoto } from '../actions/photoActions';\nimport Audio from './Audio';\n\nclass View extends React.Component {\n  componentWillMount() {\n    this.props.fetchPhoto();\n    const imagesToBePreloaded = [this.props.photoDetails.currentPhoto.urls.regular]\n    imagesToBePreloaded.forEach(image => { new Image().src = image })\n  }\n\n  render(){\n      return (\n        <div>\n          {this.props.widgetDetails.widgets.map((widget) => {\n            if (widget.type === \"Audio\") {\n              return(<div><Audio widget={widget} /></div>)\n            }\n          })}\n          {this.props.viewDetails.view === \"dashboard\" ? <DashboardView /> : <LinkTileView />}\n        </div>\n        )\n    }\n  }\n\n  function mapStateToProps(state, ownProps) {\n    return {\n      viewDetails: state.viewDetails,\n      photoDetails: state.photoDetails,\n      widgetDetails: state.widgetDetails\n    }\n  }\n\nexport default connect(mapStateToProps, { fetchPhoto })(View);\n"]},"metadata":{},"sourceType":"module"}