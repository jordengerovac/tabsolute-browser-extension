{"ast":null,"code":"var _jsxFileName = \"/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherWidget from './components/widgets/WeatherWidget';\nimport { v4 as uuid } from 'uuid';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from './actions/photoActions';\nimport DashboardView from './components/DashboardView';\nimport LinkTileView from './components/LinkTileView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.toggleView = () => {\n      var toggle = \"\";\n\n      if (this.state.viewType === \"dashboard\") {\n        toggle = \"tile\";\n      } else {\n        toggle = \"dashboard\";\n      }\n\n      this.setState({\n        viewType: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.togglePhotoBackground = () => {\n      var toggle = \"\";\n\n      if (this.state.photoBackground === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        photoBackground: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.toggleSettings = () => {\n      console.log('toggled');\n      var toggle = \"\";\n\n      if (this.state.settingsVisible === \"true\") {\n        toggle = \"false\";\n      } else {\n        toggle = \"true\";\n      }\n\n      this.setState({\n        settingsVisible: toggle\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.toggleDisplaySettings = e => {\n      if (e.target.id === \"linkWidget\") {\n        const newLinkWidget = this.state.linkWidget;\n\n        if (newLinkWidget.display.customizationVisible === \"true\") {\n          newLinkWidget.display.customizationVisible = \"false\";\n        } else {\n          newLinkWidget.display.customizationVisible = \"true\";\n        }\n\n        this.setState({\n          linkWidget: newLinkWidget\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      } else {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              if (widget.display.customizationVisible === \"false\") widget.display.customizationVisible = \"true\";else widget.display.customizationVisible = \"false\";\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.handleFontChange = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              widget.display.font = e.target.value;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.handleTileChange = e => {\n      const attribute = e.target.name;\n      this.setState({\n        tiles: this.state.tiles.map(tile => {\n          if (tile.id === e.target.id) {\n            if (attribute === \"name\") {\n              tile.name = e.target.value;\n            } else if (attribute === \"icon\") {\n              tile.icon = e.target.value;\n            } else {\n              tile.value = e.target.value;\n            }\n          }\n\n          return tile;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleClockChange = e => {\n      this.setState({\n        widgets: this.state.widgets.map(widget => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value;\n          }\n\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleNameChange = e => {\n      this.setState({\n        widgets: this.state.widgets.map(widget => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value;\n          }\n\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleDelete = e => {\n      const newWidgetsState = this.state.widgets.filter(widget => e.target.id !== widget.id);\n      this.setState({\n        widgets: newWidgetsState\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.handleTileDelete = e => {\n      const newTilesState = this.state.tiles.filter(tile => e.target.id !== tile.id);\n      this.setState({\n        tiles: newTilesState\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.addNewWidget = e => {\n      e.preventDefault();\n\n      if (e.target[0].value !== \"Select Widget\") {\n        const newWidget = {\n          id: uuid(),\n          type: e.target[0].value,\n          value: \"\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"20\",\n            location: \"center\"\n          }\n        };\n\n        if (e.target[0].value === \"Quote\") {\n          this.getRandomQuote(newWidget.id);\n        } else if (e.target[0].value === \"Scores\") {\n          this.getScores(newWidget.id);\n        }\n\n        this.setState({\n          widgets: [...this.state.widgets, newWidget]\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.addNewLinkTile = e => {\n      console.log('here');\n      e.preventDefault();\n      const newLinkTile = {\n        id: uuid(),\n        name: \"New Link Tile\",\n        value: \"https://www.google.com\",\n        icon: \"fas fa-link\"\n      };\n      this.setState({\n        tiles: [...this.state.tiles, newLinkTile]\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    };\n\n    this.getRandomQuote = wid => {\n      fetch('https://type.fit/api/quotes').then(res => res.json()).then(result => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === wid) {\n              widget.value = result[random_num].text + \":@:\" + result[random_num].author;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      });\n    };\n\n    this.getWeatherStatus = (city, wid) => {\n      const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`;\n      fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY).then(res => res.json()).then(result => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp_min: result.main.temp_min,\n            temp_max: result.main.temp_max,\n            clouds: result.weather[0].description\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n          this.setState({\n            widgets: this.state.widgets.map(widget => {\n              if (widget.id === wid) {\n                widget.value = city + \":@:\" + result.main.temp_min + \":@:\" + result.main.temp_max + \":@:\" + result.weather[0].description;\n              }\n\n              return widget;\n            })\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n        }\n      }, error => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleCityChange = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          widgets: this.state.widgets.map(widget => {\n            if (widget.id === e.target.id) {\n              widget.value = e.target.value;\n            }\n\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n        this.getWeatherStatus(e.target.value, e.target.id);\n      }\n    };\n\n    this.tick = () => {\n      var current_time = new Date();\n      this.setState({\n        time: current_time\n      });\n\n      if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n        this.setState({\n          refresh: \"true\"\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.state = {\n      photo: \"\",\n      photoDetails: {\n        artist: \"\",\n        profileLink: \"\",\n        photoLink: \"\"\n      },\n      photoBackground: \"true\",\n      refresh: \"false\",\n      settingsVisible: \"false\",\n      viewType: \"dashboard\",\n      tileColumns: 4,\n      widgets: [{\n        id: uuid(),\n        type: \"Greeting\",\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      }, {\n        id: uuid(),\n        type: \"Time\",\n        value: \"12\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      }],\n      linkWidget: {\n        value: \"12\",\n        numLinks: 3,\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        }\n      },\n      tiles: [{\n        id: uuid(),\n        name: \"Twitter\",\n        value: \"https://www.twitter.com\",\n        icon: \"fab fa-twitter\"\n      }, {\n        id: uuid(),\n        name: \"Facebook\",\n        value: \"https://www.facebook.com\",\n        icon: \"fab fa-facebook\"\n      }, {\n        id: uuid(),\n        name: \"YouTube\",\n        value: \"https://www.youtube.com\",\n        icon: \"fab fa-youtube\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    var getState = JSON.parse(localStorage.getItem(\"state\"));\n\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    }\n\n    this.setState(getState);\n    this.setState({\n      settingsVisible: \"false\"\n    }); // GET photo\n\n    fetchPhoto(); //if (getState.photo === \"\" || getState.refresh === \"true\") {\n\n    /*\n    fetch(\"https://api.unsplash.com/collections/4578671/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          var random_num = Math.floor(Math.random() * result.length);\n          this.setState({\n            photo: result[random_num].urls.regular,\n            refresh: \"false\",\n            photoDetails: {\n              artist: result[random_num].user.first_name + \" \" + result[random_num].user.last_name,\n              profileLink: result[random_num].user.links.html,\n              photoLink: result[random_num].links.html\n            }\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(\"error\")\n        }\n      )\n      */\n    //}\n    // GET weather data\n    // this.getWeatherStatus(this.state.city);\n    // GET random quote and weather data\n\n    getState.widgets.map(widget => {\n      if (widget.type === \"Quote\") this.getRandomQuote(widget.id);else if (widget.type === \"Weather\") this.getWeatherStatus(widget.value, widget.id);else if (widget.type === \"Scores\") this.getScores(widget.id);\n    });\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render() {\n    var photoURL;\n\n    if (this.state.photoBackground === \"true\") {\n      photoURL = this.state.photo;\n    } else {\n      photoURL = \"\";\n    }\n\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    } else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    } else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\";\n    } else {\n      greeting = \"morning\";\n    }\n\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: this.state.viewType === \"dashboard\" ? /*#__PURE__*/_jsxDEV(DashboardView, {\n        settingsVisible: this.state.settingsVisible,\n        toggleSettings: this.toggleSettings,\n        handleNameChange: this.handleNameChange,\n        handleCityChange: this.handleCityChange,\n        addNewWidget: this.addNewWidget,\n        widgets: this.state.widgets,\n        handleDelete: this.handleDelete,\n        handleClockChange: this.handleClockChange,\n        handleFontChange: this.handleFontChange,\n        toggleDisplaySettings: this.toggleDisplaySettings,\n        toggleView: this.toggleView,\n        viewType: this.state.viewType,\n        linkWidget: this.state.linkWidget,\n        tiles: this.state.tiles,\n        addNewLinkTile: this.addNewLinkTile,\n        handleTileChange: this.handleTileChange,\n        handleTileDelete: this.handleTileDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 50\n      }, this) : /*#__PURE__*/_jsxDEV(LinkTileView, {\n        settingsVisible: this.state.settingsVisible,\n        toggleSettings: this.toggleSettings,\n        handleNameChange: this.handleNameChange,\n        handleCityChange: this.handleCityChange,\n        addNewWidget: this.addNewWidget,\n        widgets: this.state.widgets,\n        handleDelete: this.handleDelete,\n        handleClockChange: this.handleClockChange,\n        handleFontChange: this.handleFontChange,\n        toggleDisplaySettings: this.toggleDisplaySettings,\n        toggleView: this.toggleView,\n        viewType: this.state.viewType,\n        linkWidget: this.state.linkWidget,\n        tiles: this.state.tiles,\n        addNewLinkTile: this.addNewLinkTile,\n        handleTileChange: this.handleTileChange,\n        handleTileDelete: this.handleTileDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 703\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordengerovac/Desktop/Programming/ChromeExtensionProjects/tabsolute-react-extension/src/App.js"],"names":["React","SettingsBar","WeatherWidget","v4","uuid","Switch","MuiThemeProvider","createMuiTheme","Provider","store","connect","fetchPhoto","DashboardView","LinkTileView","App","Component","constructor","toggleView","toggle","state","viewType","setState","localStorage","setItem","JSON","stringify","togglePhotoBackground","photoBackground","toggleSettings","console","log","settingsVisible","toggleDisplaySettings","e","target","id","newLinkWidget","linkWidget","display","customizationVisible","widgets","map","widget","handleFontChange","key","font","value","handleTileChange","attribute","name","tiles","tile","icon","handleClockChange","handleNameChange","handleDelete","newWidgetsState","filter","handleTileDelete","newTilesState","addNewWidget","preventDefault","newWidget","type","location","getRandomQuote","getScores","addNewLinkTile","newLinkTile","wid","fetch","then","res","json","result","random_num","Math","floor","random","length","text","author","getWeatherStatus","city","WEATHER_API_KEY","process","env","REACT_APP_WEATHER_API_KEY","hasOwnProperty","temp_min","main","temp_max","clouds","weather","description","error","handleCityChange","tick","current_time","Date","time","getMinutes","getSeconds","refresh","photo","photoDetails","artist","profileLink","photoLink","tileColumns","numLinks","componentDidMount","UNSPLASH_API_KEY","REACT_APP_UNSPLASH_API_KEY","getState","parse","getItem","setInterval","render","photoURL","greeting","ampm","getHours","theme","palette","primary"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport SettingsBar from './components/SettingsBar';\nimport WeatherWidget from './components/widgets/WeatherWidget';\nimport { v4 as uuid } from 'uuid';\nimport Switch from '@material-ui/core/Switch';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { connect } from 'react-redux';\nimport { fetchPhoto } from './actions/photoActions';\nimport DashboardView from './components/DashboardView';\nimport LinkTileView from './components/LinkTileView';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {      \n      photo: \"\",\n      photoDetails: {\n        artist: \"\",\n        profileLink: \"\",\n        photoLink: \"\"\n      },\n      photoBackground: \"true\",\n      refresh: \"false\",\n      settingsVisible: \"false\",\n      viewType: \"dashboard\",\n      tileColumns: 4,\n      widgets: [\n        {\n          id: uuid(),\n          type: \"Greeting\",\n          value: \"\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          }\n        },\n        {\n          id: uuid(),\n          type: \"Time\",\n          value: \"12\",\n          display: {\n            customizationVisible: \"false\",\n            font: \"50\",\n            location: \"center\"\n          },\n        }\n      ],\n      linkWidget: {\n        value: \"12\",\n        numLinks: 3,\n        display: {\n          customizationVisible: \"false\",\n          font: \"50\",\n          location: \"center\"\n        },\n      },\n      tiles: [\n        {\n          id: uuid(),\n          name: \"Twitter\",\n          value: \"https://www.twitter.com\",\n          icon: \"fab fa-twitter\"\n        },\n        {\n          id: uuid(),\n          name: \"Facebook\",\n          value: \"https://www.facebook.com\",\n          icon: \"fab fa-facebook\"\n        },\n        {\n          id: uuid(),\n          name: \"YouTube\",\n          value: \"https://www.youtube.com\",\n          icon: \"fab fa-youtube\"\n        }\n      ]\n    };\n  }\n\n  toggleView = () => {\n    var toggle = \"\";\n    if (this.state.viewType === \"dashboard\") {\n      toggle = \"tile\";\n    }\n    else {\n      toggle = \"dashboard\";\n    }\n    this.setState({\n      viewType: toggle\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  togglePhotoBackground = () => {\n    var toggle = \"\";\n    if (this.state.photoBackground === \"true\") {\n      toggle = \"false\";\n    }\n    else {\n      toggle = \"true\";\n    }\n    this.setState({\n      photoBackground: toggle\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  toggleSettings = () => {\n    console.log('toggled')\n    var toggle = \"\";\n    if (this.state.settingsVisible === \"true\") {\n      toggle = \"false\";\n    }\n    else {\n      toggle = \"true\";\n    }\n    this.setState({\n      settingsVisible: toggle\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  toggleDisplaySettings = (e) => {\n    if (e.target.id === \"linkWidget\") {\n      const newLinkWidget = this.state.linkWidget;\n      if (newLinkWidget.display.customizationVisible === \"true\") {\n        newLinkWidget.display.customizationVisible = \"false\"\n      }\n      else {\n        newLinkWidget.display.customizationVisible = \"true\"\n      }\n      this.setState({\n        linkWidget: newLinkWidget\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n    else {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            if (widget.display.customizationVisible === \"false\")\n              widget.display.customizationVisible = \"true\";\n            else\n              widget.display.customizationVisible = \"false\";\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    }\n  }\n\n  handleFontChange = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            widget.display.font = e.target.value\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n  }\n\n  handleTileChange = (e) => {\n    const attribute = e.target.name;\n    this.setState({\n      tiles: this.state.tiles.map((tile) => {\n        if (tile.id === e.target.id) {\n          if (attribute === \"name\") {\n            tile.name = e.target.value\n          }\n          else if (attribute === \"icon\") {\n            tile.icon = e.target.value\n          }\n          else {\n            tile.value = e.target.value\n          }\n        }\n        return tile;\n      })\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  handleClockChange = (e) => {\n    this.setState({\n      widgets: this.state.widgets.map((widget) => {\n        if (widget.id === e.target.id) {\n          widget.value = e.target.value\n        }\n        return widget;\n      })\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      widgets: this.state.widgets.map((widget) => {\n        if (widget.id === e.target.id) {\n          widget.value = e.target.value\n        }\n        return widget;\n      })\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  handleDelete = (e) => {\n    const newWidgetsState = this.state.widgets.filter(widget => e.target.id !== widget.id);\n    this.setState({\n      widgets: newWidgetsState\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  handleTileDelete = (e) => {\n    const newTilesState = this.state.tiles.filter(tile => e.target.id !== tile.id);\n    this.setState({\n      tiles: newTilesState\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n  }\n\n  addNewWidget = (e) => {\n    e.preventDefault();\n    if (e.target[0].value !== \"Select Widget\") {\n      const newWidget = {\n        id: uuid(),\n        type: e.target[0].value,\n        value: \"\",\n        display: {\n          customizationVisible: \"false\",\n          font: \"20\",\n          location: \"center\"\n        }\n      }\n\n      if (e.target[0].value === \"Quote\") {\n        this.getRandomQuote(newWidget.id);\n      }\n      else if (e.target[0].value === \"Scores\") {\n        this.getScores(newWidget.id);\n      }\n\n      this.setState({\n        widgets: [...this.state.widgets, newWidget]\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n    }\n  }\n\n  addNewLinkTile = (e) => {\n    console.log('here')\n    e.preventDefault();\n    const newLinkTile = {\n      id: uuid(),\n      name: \"New Link Tile\",\n      value: \"https://www.google.com\",\n      icon: \"fas fa-link\"\n    }\n\n    this.setState({\n      tiles: [...this.state.tiles, newLinkTile]\n    }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n  }\n\n  getRandomQuote = (wid) => {\n    fetch('https://type.fit/api/quotes')\n      .then(res => res.json())\n      .then(\n      (result) => {\n        var random_num = Math.floor(Math.random() * result.length);\n        this.setState({\n          widgets: this.state.widgets.map((widget) => {\n            if (widget.id === wid) {\n              widget.value = result[random_num].text + \":@:\" + result[random_num].author\n            }\n            return widget;\n          })\n        }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n      }\n    )\n  }\n\n  getWeatherStatus = (city, wid) => {\n    const WEATHER_API_KEY = `${process.env.REACT_APP_WEATHER_API_KEY}`\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&appid=' + WEATHER_API_KEY)\n      .then(res => res.json())\n      .then(\n      (result) => {\n        if (result.hasOwnProperty(\"main\")) {\n          this.setState({\n            temp_min: result.main.temp_min,\n            temp_max: result.main.temp_max,\n            clouds: result.weather[0].description\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n\n          this.setState({\n            widgets: this.state.widgets.map((widget) => {\n              if (widget.id === wid) {\n                widget.value = city + \":@:\" + result.main.temp_min + \":@:\" + result.main.temp_max + \":@:\" + result.weather[0].description\n              }\n              return widget;\n            })\n          }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n        }\n      },\n      (error) => {\n          console.log(\"error\")\n      }\n    )\n}\n\n  handleCityChange = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({\n        widgets: this.state.widgets.map((widget) => {\n          if (widget.id === e.target.id) {\n            widget.value = e.target.value\n          }\n          return widget;\n        })\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n      this.getWeatherStatus(e.target.value, e.target.id);\n    }\n  }\n\n  tick = () => {\n    var current_time = new Date();\n    this.setState({\n      time: current_time\n    });\n\n    if (current_time.getMinutes() % 5 === 0 && current_time.getSeconds() === 0) {\n      this.setState({\n        refresh: \"true\"\n      }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)));\n    }\n  }\n\n\n  componentDidMount() {\n    const UNSPLASH_API_KEY = `${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n    var getState = JSON.parse(localStorage.getItem(\"state\"));\n    if (getState === null) {\n      localStorage.setItem(\"state\", JSON.stringify(this.state));\n      getState = JSON.parse(localStorage.getItem(\"state\"));\n    }\n    this.setState(getState);\n    this.setState({\n      settingsVisible: \"false\"\n    });\n\n    // GET photo\n    fetchPhoto();\n\n    //if (getState.photo === \"\" || getState.refresh === \"true\") {\n      /*\n      fetch(\"https://api.unsplash.com/collections/4578671/photos/?orientation=landscape&per_page=100&client_id=\" + UNSPLASH_API_KEY)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            console.log(result)\n            var random_num = Math.floor(Math.random() * result.length);\n            this.setState({\n              photo: result[random_num].urls.regular,\n              refresh: \"false\",\n              photoDetails: {\n                artist: result[random_num].user.first_name + \" \" + result[random_num].user.last_name,\n                profileLink: result[random_num].user.links.html,\n                photoLink: result[random_num].links.html\n              }\n            }, () => localStorage.setItem(\"state\", JSON.stringify(this.state)))\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(\"error\")\n          }\n        )\n        */\n    //}\n\n    // GET weather data\n    // this.getWeatherStatus(this.state.city);\n\n    // GET random quote and weather data\n    getState.widgets.map((widget) => {\n      if (widget.type === \"Quote\")\n        this.getRandomQuote(widget.id);\n      else if (widget.type === \"Weather\")\n        this.getWeatherStatus(widget.value, widget.id);\n      else if (widget.type === \"Scores\")\n        this.getScores(widget.id);\n    })\n\n    setInterval(() => {\n      this.tick();\n    }, 1000);\n  }\n\n  render(){\n    var photoURL;\n    if (this.state.photoBackground === \"true\") {\n      photoURL = this.state.photo;\n    }\n    else {\n      photoURL = \"\"\n    }\n    const current_time = new Date();\n    var greeting = \"\";\n    var ampm = current_time.getHours() >= 12 ? 'PM' : 'AM';\n    if (current_time.getHours() >= 21) {\n      greeting = \"night\";\n    }\n    else if (current_time.getHours() >= 18) {\n      greeting = \"evening\";\n    }\n    else if (current_time.getHours() >= 12) {\n      greeting = \"afternoon\"\n    }\n    else {\n      greeting = \"morning\"\n    }\n\n    const theme = createMuiTheme({\n      palette: {\n        primary: {\n          main: '#4495F6'\n        }\n      }\n    });\n      return (\n        <Provider store={store}>\n          {this.state.viewType === \"dashboard\" ? <DashboardView settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} handleCityChange={this.handleCityChange} addNewWidget={this.addNewWidget} widgets={this.state.widgets} handleDelete={this.handleDelete} handleClockChange={this.handleClockChange} handleFontChange={this.handleFontChange} toggleDisplaySettings={this.toggleDisplaySettings} toggleView={this.toggleView} viewType={this.state.viewType} linkWidget={this.state.linkWidget} tiles={this.state.tiles} addNewLinkTile={this.addNewLinkTile} handleTileChange={this.handleTileChange} handleTileDelete={this.handleTileDelete} /> : <LinkTileView settingsVisible={this.state.settingsVisible} toggleSettings={this.toggleSettings} handleNameChange={this.handleNameChange} handleCityChange={this.handleCityChange} addNewWidget={this.addNewWidget} widgets={this.state.widgets} handleDelete={this.handleDelete} handleClockChange={this.handleClockChange} handleFontChange={this.handleFontChange} toggleDisplaySettings={this.toggleDisplaySettings} toggleView={this.toggleView} viewType={this.state.viewType} linkWidget={this.state.linkWidget} tiles={this.state.tiles} addNewLinkTile={this.addNewLinkTile} handleTileChange={this.handleTileChange} handleTileDelete={this.handleTileDelete} />}\n        </Provider>\n        )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}